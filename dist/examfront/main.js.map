{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/rabbitmq.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/user/user-dashboard/user-dashboard.component.ts","./src/app/pages/user/user-dashboard/user-dashboard.component.html","./src/app/pages/user/load-quiz/load-quiz.component.ts","./src/app/pages/user/load-quiz/load-quiz.component.html","./src/app/pages/admin/add-quiz/add-quiz.component.ts","./src/app/pages/admin/add-quiz/add-quiz.component.html","./src/app/pages/admin/view-categories/view-categories.component.ts","./src/app/pages/admin/view-categories/view-categories.component.html","./src/app/image-upload/image-upload.component.ts","./src/app/image-upload/image-upload.component.html","./src/app/services/user.service.ts","./src/app/services/admin.guard.ts","./src/app/pages/profile/profile.component.ts","./src/app/pages/profile/profile.component.html","./src/app/services/normal.guard.ts","./src/app/services/login.service.ts","./src/app/pages/user/start/start.component.ts","./src/app/pages/user/start/start.component.html","./src/app/pages/admin/welcome/welcome.component.ts","./src/app/pages/admin/welcome/welcome.component.html","./src/app/services/config.service.ts","./src/app/pages/admin/view-quiz-questions/view-quiz-questions.component.ts","./src/app/pages/admin/view-quiz-questions/view-quiz-questions.component.html","./src/app/pages/user/sidebar/sidebar.component.ts","./src/app/pages/user/sidebar/sidebar.component.html","./src/app/notification/notification.component.ts","./src/app/notification/notification.component.html","./src/app/flags-ui.service.ts","./src/app/services/category.service.ts","./src/main.ts","./src/app/services/quiz.service.ts","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/admin/dashboard/dashboard.component.ts","./src/app/pages/admin/dashboard/dashboard.component.html","./src/environments/environment.ts","./src/app/pages/admin/add-question/add-question.component.ts","./src/app/pages/admin/add-question/add-question.component.html","./src/app/components/footer/footer.component.ts","./src/app/services/auth.interceptor.ts","./src/app/services/question.service.ts","./src/app/pages/signup/signup.component.ts","./src/app/pages/signup/signup.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/admin/add-category/add-category.component.ts","./src/app/pages/admin/add-category/add-category.component.html","./src/app/pages/admin/update-quiz/update-quiz.component.ts","./src/app/pages/admin/update-quiz/update-quiz.component.html","./src/app/pages/user/instructions/instructions.component.ts","./src/app/pages/user/instructions/instructions.component.html","./src/app/pages/admin/view-quizzes/view-quizzes.component.ts","./src/app/pages/admin/view-quizzes/view-quizzes.component.html","./src/app/pages/admin/sidebar/sidebar.component.ts","./src/app/pages/admin/sidebar/sidebar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\n// import { Client, IMessage } from '@stomp/stompjs/esm6';\nimport  SockJS from 'sockjs-client';\nimport { Client, IMessage }  from '@stomp/stompjs';\n// import {rabbitmqUrl,} from './helper';\n\nimport { Subject } from 'rxjs';\nimport { ConfigService } from './services/config.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class RabbitmqService {\n\n  constructor(private configService: ConfigService) { }\n\n  private stompClient: Client = new Client;\n  private messageSubject = new Subject<string>();\n  public messageStream$ = this.messageSubject.asObservable();\n\n  connect(): void {\n    const socket = new SockJS(`${this.configService.rabbitmq_url}/ws`); // ✅ Your backend endpoint\n    this.stompClient = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        console.log('Connected to WebSocket');\n        this.stompClient.subscribe('/topic/messages', (message: IMessage) => {\n          console.log('Received message:', message.body);\n          if (message.body) {\n            this.messageSubject.next(message.body);\n          }\n        });\n      }\n    });\n\n    this.stompClient.activate();\n  }\n\n  disconnect(): void {\n    if (this.stompClient) {\n      this.stompClient.deactivate();\n      console.log('Disconnected');\n    }\n  }\n\n\n\n}\n","import { Component, OnInit, Renderer2 } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n// Material Modules\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\nimport { NgxUiLoaderHttpModule, NgxUiLoaderModule } from 'ngx-ui-loader';\n\nimport { RabbitmqService } from './rabbitmq.service';\nimport { ConfigService } from './services/config.service';\n\n// Components (if they are also standalone, otherwise they are declared in their own feature modules)\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { SignupComponent } from './pages/signup/signup.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { DashboardComponent } from './pages/admin/dashboard/dashboard.component';\nimport { UserDashboardComponent } from './pages/user/user-dashboard/user-dashboard.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { SidebarComponent } from './pages/admin/sidebar/sidebar.component';\nimport { WelcomeComponent } from './pages/admin/welcome/welcome.component';\nimport { ViewCategoriesComponent } from './pages/admin/view-categories/view-categories.component';\nimport { AddCategoryComponent } from './pages/admin/add-category/add-category.component';\nimport { ViewQuizzesComponent } from './pages/admin/view-quizzes/view-quizzes.component';\nimport { AddQuizComponent } from './pages/admin/add-quiz/add-quiz.component';\nimport { UpdateQuizComponent } from './pages/admin/update-quiz/update-quiz.component';\nimport { ViewQuizQuestionsComponent } from './pages/admin/view-quiz-questions/view-quiz-questions.component';\nimport { AddQuestionComponent } from './pages/admin/add-question/add-question.component';\nimport { SidebarComponent as UserSidebar } from './pages/user/sidebar/sidebar.component';\nimport { LoadQuizComponent } from './pages/user/load-quiz/load-quiz.component';\nimport { InstructionsComponent } from './pages/user/instructions/instructions.component';\nimport { StartComponent } from './pages/user/start/start.component';\nimport { NotificationComponent } from './notification/notification.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatSlideToggleModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatDividerModule,\n    CKEditorModule,\n    NgxUiLoaderModule,\n    NgxUiLoaderHttpModule,\n\n    // All application components need to be imported here if they are standalone\n    NavbarComponent,\n    FooterComponent,\n    // Removed: NotificationComponent,\n\n    // The following components are routed and should not be imported directly into AppComponent.\n    // Removed: SignupComponent,\n    // Removed: LoginComponent,\n    // Removed: HomeComponent,\n    // Removed: DashboardComponent,\n    // Removed: UserDashboardComponent,\n    // Removed: ProfileComponent,\n    // Removed: SidebarComponent,\n    // Removed: WelcomeComponent,\n    // Removed: ViewCategoriesComponent,\n    // Removed: AddCategoryComponent,\n    // Removed: ViewQuizzesComponent,\n    // Removed: AddQuizComponent,\n    // Removed: UpdateQuizComponent,\n    // Removed: ViewQuizQuestionsComponent,\n    // Removed: AddQuestionComponent,\n    // Removed: UserSidebar,\n    // Removed: LoadQuizComponent,\n    // Removed: InstructionsComponent,\n    // Removed: StartComponent,\n  ],\n})\nexport class AppComponent  implements OnInit{\n  title = 'TestYourself';\n\n constructor(private configService: ConfigService,private websocketService: RabbitmqService,private http: HttpClient, private renderer: Renderer2) {\n    this.websocketService.connect();\n  }\n  ngOnInit(): void {\n   \n    this.loadBackgroundImage();\n  }\n\n\n   \nloadBackgroundImage() {\n  this.http.get(`${this.configService.image_url}/api/images/background`, { responseType: 'blob' })\n    .subscribe(blob => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const imageUrl = reader.result as string;\n        this.renderer.setStyle(document.body, 'backgroundImage', `url('${imageUrl}')`);\n        this.renderer.setStyle(document.body, 'backgroundSize', 'cover');\n        this.renderer.setStyle(document.body, 'backgroundPosition', 'center');\n      };\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","<ngx-ui-loader\n  fgsColor=\"#ff4081\"\n  pbColor=\"#ff4081\"\n  text=\"Please wait..\"\n  pbThickness=\"6\"\n  textColor=\"#ff4081\"\n></ngx-ui-loader>\n\n<div ngxUiLoaderBlurred blur=\"6\">\n  <app-navbar></app-navbar>\n\n  <!-- dynamic content -->\n  <router-outlet></router-outlet>\n  <app-footer></app-footer>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { SidebarComponent as UserSidebar } from '../sidebar/sidebar.component'; // Using the alias here\n\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    UserSidebar,\n  ],\n})\nexport class UserDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bootstrap-wrapper\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">\n        <app-sidebar-user></app-sidebar-user>\n      </div>\n\n      <div class=\"col-md-10\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, RouterModule } from '@angular/router';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'app-load-quiz',\n  templateUrl: './load-quiz.component.html',\n  styleUrls: ['./load-quiz.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatCardModule,\n    MatButtonModule,\n  ],\n})\nexport class LoadQuizComponent implements OnInit {\n  catId;\n  quizzes;\n\n  constructor(private _route: ActivatedRoute, private _quiz: QuizService) {}\n\n  ngOnInit(): void {\n    this._route.params.subscribe((params) => {\n      this.catId = params.catId;\n\n      if (this.catId == 0) {\n        console.log('Load all the quiz');\n\n        this._quiz.getActiveQuizzes().subscribe(\n          (data: any) => {\n            this.quizzes = data;\n            console.log(this.quizzes);\n          },\n          (error) => {\n            console.log(error);\n            alert('error in loading all quizzes');\n          }\n        );\n      } else {\n        console.log('Load specific quiz');\n\n        this._quiz.getActiveQuizzesOfCategory(this.catId).subscribe(\n          (data: any) => {\n            this.quizzes = data;\n            console.log(this.quizzes);\n          },\n          (error) => {\n            alert('error in loading quiz data');\n          }\n        );\n      }\n    });\n  }\n}\n","<div class=\"bootstrap-wrapper\">\n  <div class=\"container-fluid\">\n    <h1 class=\"mt20\">Available Quizzes</h1>\n    <div class=\"row mt20\" *ngIf=\"quizzes\">\n      <div class=\"col-md-4\" *ngFor=\"let q of quizzes\">\n        <mat-card class=\"mb20\">\n          <mat-card-header>\n            <div mat-card-avatar class=\"example-header-image\"></div>\n            <mat-card-title>\n              {{ q.title }}\n            </mat-card-title>\n            <mat-card-subtitle>\n              {{ q.category.title }}\n            </mat-card-subtitle>\n          </mat-card-header>\n          <mat-card-content>\n            <p class=\"truncate\">{{ q.description }}</p>\n          </mat-card-content>\n          <mat-card-action>\n            <button mat-button color=\"primary\">View</button>\n            <button\n              mat-button\n              color=\"accent\"\n              [routerLink]=\"'/user-dashboard/instructions/' + q.qId\"\n              class=\"ml10\"\n            >\n              Start\n            </button>\n            <script>console.log('Quiz ID for this button:', q.qId);</script>\n            <button mat-button color=\"accent\">\n              Questions :{{ q.numberOfQuestions }}\n            </button>\n            <button mat-button color=\"accent\">M.M :{{ q.maxMarks }}</button>\n          </mat-card-action>\n        </mat-card>\n      </div>\n\n      <div class=\"col-md-12\" *ngIf=\"quizzes.length == 0\">\n        <mat-card>\n          <mat-card-content>\n            <h1>No data in this category</h1>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport Swal from 'sweetalert2';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\n\n@Component({\n  selector: 'app-add-quiz',\n  templateUrl: './add-quiz.component.html',\n  styleUrls: ['./add-quiz.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    CKEditorModule,\n  ],\n})\nexport class AddQuizComponent implements OnInit {\n  categories = [];\n\n  quizData = {\n    title: '',\n    description: '',\n    maxMarks: '',\n    numberOfQuestions: '',\n    active: true,\n    category: {\n      cid: '',\n    },\n  };\n\n  constructor(\n    private _cat: CategoryService,\n    private _snack: MatSnackBar,\n    private _quiz: QuizService\n  ) {}\n\n  ngOnInit(): void {\n    this._cat.categories().subscribe(\n      (data: any) => {\n        //categories load\n        this.categories = data;\n        // console.log(this.categories);\n      },\n\n      (error) => {\n        console.log(error);\n        Swal.fire('Error!!', 'error in loading data from server', 'error');\n      }\n    );\n  }\n  //\n  addQuiz() {\n    if (this.quizData.title.trim() == '' || this.quizData.title == null) {\n      this._snack.open('Title Required !!', '', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    //validation...\n\n    //call server\n    this._quiz.addQuiz(this.quizData).subscribe(\n      (data) => {\n        Swal.fire('Success', 'quiz is added', 'success');\n        this.quizData = {\n          title: '',\n          description: '',\n          maxMarks: '',\n          numberOfQuestions: '',\n          active: true,\n          category: {\n            cid: '',\n          },\n        };\n      },\n\n      (error) => {\n        Swal.fire('Error!! ', 'Error while adding quiz', 'error');\n        console.log(error);\n      }\n    );\n  }\n}\n","<mat-card>\n  <h1>Add New Quiz</h1>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\">\n        <form (ngSubmit)=\"addQuiz()\">\n          <!-- title field  -->\n          <mat-form-field class=\"w100\" appearance=\"fill\">\n            <mat-label>Enter Title</mat-label>\n            <input\n              [(ngModel)]=\"quizData.title\"\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Enter here\"\n              matInput\n              required\n            />\n          </mat-form-field>\n\n          <!-- description field  -->\n\n          <mat-form-field class=\"w100\" appearance=\"fill\">\n            <mat-label>Enter Description </mat-label>\n            <textarea\n              [(ngModel)]=\"quizData.description\"\n              type=\"text\"\n              name=\"description\"\n              placeholder=\"Enter here\"\n              matInput\n              rows=\"5\"\n            ></textarea>\n          </mat-form-field>\n\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <!-- //max marks -->\n              <mat-form-field class=\"w100\" appearance=\"fill\">\n                <mat-label>Maximum Marks</mat-label>\n                <input\n                  [(ngModel)]=\"quizData.maxMarks\"\n                  type=\"text\"\n                  name=\"maxMarks\"\n                  placeholder=\"Enter here\"\n                  matInput\n                />\n              </mat-form-field>\n            </div>\n            <div class=\"col-md-6\">\n              <!-- number of question to be shown  -->\n              <mat-form-field class=\"w100\" appearance=\"fill\">\n                <mat-label>Number of Question</mat-label>\n                <input\n                  [(ngModel)]=\"quizData.numberOfQuestions\"\n                  type=\"text\"\n                  name=\"numberOfQuestions\"\n                  placeholder=\"Enter here\"\n                  matInput\n                />\n              </mat-form-field>\n            </div>\n          </div>\n\n          <!-- active field   -->\n\n          <mat-slide-toggle\n            name=\"active\"\n            [(ngModel)]=\"quizData.active\"\n            class=\"mt20\"\n          >\n            Publish Status\n          </mat-slide-toggle>\n\n          <br />\n          <!-- //category select  -->\n          <mat-form-field appearance=\"fill\" class=\"mt20 w100\">\n            <mat-label>Categories</mat-label>\n            <mat-select name=\"category\" [(ngModel)]=\"quizData.category.cid\">\n              <mat-option *ngFor=\"let c of categories\" [value]=\"c.cid\">\n                {{ c.title }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <div class=\"container text-center\">\n            <button mat-raised-button color=\"accent\" type=\"submit\">Add</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</mat-card>\n\n<!-- {{ quizData | json }} -->\n","import { Component, OnInit } from '@angular/core';\nimport { CategoryService } from 'src/app/services/category.service';\nimport Swal from 'sweetalert2';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\n@Component({\n  selector: 'app-view-categories',\n  templateUrl: './view-categories.component.html',\n  styleUrls: ['./view-categories.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatCardModule,\n    MatListModule,\n    MatIconModule,\n    MatDividerModule,\n    MatButtonModule,\n    MatExpansionModule,\n  ],\n})\nexport class ViewCategoriesComponent implements OnInit {\n  categories = [];\n  panelOpenState: boolean = false;\n\n  constructor(private _category: CategoryService) {}\n\n  ngOnInit(): void {\n    this._category.categories().subscribe(\n      (data: any) => {\n        //css\n        this.categories = data;\n        console.log(this.categories);\n      },\n\n      (error) => {\n        //\n        console.log(error);\n        Swal.fire('Error !!', 'Error in loading data', 'error');\n      }\n    );\n  }\n}\n","<mat-card>\n  <h1>All Categories</h1>\n\n  <mat-accordion class=\"scrollable-accordion\">\n    <mat-expansion-panel *ngFor=\"let c of categories\" (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\n      <mat-expansion-panel-header>\n        <mat-panel-title> {{ c.title }} </mat-panel-title>\n       \n      </mat-expansion-panel-header>\n      <p>{{ c.description }}</p>\n    </mat-expansion-panel>\n  </mat-accordion>\n\n  <div *ngIf=\"categories.length === 0\" class=\"container text-center mt20\" style=\"color: gray;\">\n    <p>No categories found. Please add new categories.</p>\n  </div>\n\n  <div class=\"container text-center mt20\">\n    <button routerLink=\"/admin/add-category\" mat-raised-button color=\"accent\">\n      Add New Category\n    </button>\n  </div>\n</mat-card>\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { Component, OnInit ,Renderer2} from '@angular/core';\nimport Swal from 'sweetalert2';\nimport { FlagsUiService } from '../flags-ui.service';\nimport { UserService } from '../services/user.service';\nimport { ConfigService } from '../services/config.service';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card'; // Assuming MatCardModule might be used\n\n@Component({\n  selector: 'app-image-upload',\n  templateUrl: './image-upload.component.html',\n  styleUrls: ['./image-upload.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n  ]\n})\nexport class ImageUploadComponent implements OnInit {\n\n    description = '';\n  selectedFile: File | null = null;\n  imagePreview: string | ArrayBuffer | null = null;\n\n  uploadedImages: string[] = [];\n  dataLoadingError: boolean = false; // New flag for data loading errors\n\nColours:any= [] \n\n  constructor(private http: HttpClient,private renderer: Renderer2,private flagService: FlagsUiService,private userService:UserService, private configService: ConfigService) {\n       this.fetchUploadedImages();\n   \n  }\n  ngOnInit(): void {\n        console.log(\"ImageUploadComponent: Initializing data...\")\n  this.userService.getBgColours().subscribe({\n    next: (data:any)=>{\n        console.log(\"ImageUploadComponent: Background colors fetched successfully.\")\n      this.Colours =JSON.parse(data) ;\n    } ,\n    error: (error) => {\n      console.error(\"ImageUploadComponent Error fetching colors:\", error);\n      this.dataLoadingError = true;\n    }\n  });\n  }\n\nselectedColor: string | null = null;\n\nisMaterialColor(color: string): boolean {\n  return ['primary', 'accent', 'warn'].includes(color);\n}\n\n\n\ncolour={color:\"\"}\n\ncolourData:any\nselectColor(color:any){\n\n    this.flagService.setColor(color);\n\n\n\n  \n// this.flagService.setColor.subscribe((data:any)=>{\n// console.log(\":::::::imageui::::data\"+data)\n//     } , (error) => {\n//       console.error(\"Error for activating color colors:\", error);})\n\n      this.selectedColor = color.color;\n  }\n\n\n\n// For display box\ngetColorStyle(color: string): any {\n  return this.isMaterialColor(color)\n    ? {\n        border: '1px solid #999',\n        padding: '10px',\n        textAlign: 'center',\n        width: '100px',\n        height: '50px',\n        cursor: 'pointer'\n      }\n    : {\n        backgroundColor: color,\n        color: this.getTextColor(color),\n        border: '1px solid black',\n        padding: '10px',\n        textAlign: 'center',\n        width: '100px',\n        height: '50px',\n        cursor: 'pointer'\n      };\n}\n\n// Light/dark contrast helper\ngetTextColor(color: string | null): string {\n  if (!color) return 'black'; // fallback for null/undefined\n  const darkColors = ['black', 'blue', 'indigo', 'purple', 'brown', 'gray', 'teal'];\n  return darkColors.includes(color.toLowerCase()) ? 'white' : 'black';\n}\naddColor(){\n\n    \n       let obj={\n        \"color\": this.colourData,\n        \"active\": false}\nthis.userService.addColor(obj).subscribe((data)=>{\n  console.log(\"data\"+data)\n})\n  console.log(this.colourData)\n\n\n\n\n\n}\n\n  onFileChange(event: any) {\n    this.selectedFile = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result;\n    };\n    reader.readAsDataURL(this.selectedFile);\n  }\n\n  onSubmit() {\n    if (!this.description || !this.selectedFile) {\n      Swal.fire('Warning', 'Please fill all fields', 'warning');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('description', this.description);\n    formData.append('image', this.selectedFile);\n   formData.append('isBackground', String(false)); \n\n\n\n\n\n    this.http.post(`${this.configService.image_url}/api/images/upload`, formData).subscribe({\n      next: () => {\n        Swal.fire('Success', 'Image uploaded successfully!', 'success');\n        this.description = '';\n        this.selectedFile = null;\n        this.imagePreview = null;\n      },\n      error: () => {\n        Swal.fire('Error', 'Image upload failed.', 'error');\n      }\n    });\n  }\n  imags:any=[];\nfetchUploadedImages() {\n  this.http.get<any[]>(`${this.configService.image_url}/api/images`).subscribe({\n    next: (images: any[]) => {\n\nthis.imags=images\n      this.uploadedImages = images.map(image => image); // Extract URLs into the array\n      console.log(\"ImageUploadComponent: Loaded image URLs:\", this.uploadedImages);\n    },\n    error: err => {\n      console.error('ImageUploadComponent Failed to fetch images', err);\n      this.dataLoadingError = true;\n    }\n  });\n}\n\n    setBackground(imageUrl: string) {\n    this.renderer.setStyle(document.body, 'backgroundImage', `url('${imageUrl}')`);\n    this.renderer.setStyle(document.body, 'backgroundSize', 'cover');\n    this.renderer.setStyle(document.body, 'backgroundPosition', 'center');\n  }\n\nsetAsBackground(id: any) {\n  const imageUrls = `${this.configService.image_url}/api/images/${id}`;\n\n  this.http.post(`${this.configService.image_url}/images/set-background/${id}`, {})\n    .subscribe(() => {\n     \n      Swal.fire('Success', 'Background set!', 'success');\n\n      this.loadBackgroundImage(); // Optional if you want to reload with blob\n    });\n\n      this.renderer.setStyle(document.body, 'backgroundImage', `url('${imageUrls}')`);\n      this.renderer.setStyle(document.body, 'backgroundSize', 'cover');\n      this.renderer.setStyle(document.body, 'backgroundPosition', 'center');\n\n\n}\n\n   \nloadBackgroundImage() {\n  this.http.get(`${this.configService.image_url}/api/images/background`, { responseType: 'blob' })\n    .subscribe(blob => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const imageUrl = reader.result as string;\n        this.renderer.setStyle(document.body, 'backgroundImage', `url('${imageUrl}')`);\n        this.renderer.setStyle(document.body, 'backgroundSize', 'cover');\n        this.renderer.setStyle(document.body, 'backgroundPosition', 'center');\n      };\n      reader.readAsDataURL(blob);\n    });\n  }\n\nsendData() {\n    this.flagService.changeMessage({ msg: 'success' });\n  }\n}\n","<p>image-upload works!</p>\n\n<div *ngIf=\"dataLoadingError\" style=\"color: red; padding: 20px; border: 1px solid red; margin: 20px 0;\">\n  <p>Error loading data for this page. Please check the browser console for details and ensure the backend services are running.</p>\n</div>\n\n<div class=\"upload-container mat-elevation-z4\">\n  <h2>📤 Upload Image</h2>\n\n  <form (submit)=\"onSubmit(); $event.preventDefault()\" enctype=\"multipart/form-data\">\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\n      <mat-label>Description</mat-label>\n      <input matInput [(ngModel)]=\"description\" name=\"description\" required>\n    </mat-form-field>\n\n    <input type=\"file\" (change)=\"onFileChange($event)\" accept=\"image/*\" required />\n\n    <div *ngIf=\"imagePreview\" class=\"image-preview\">\n      <img [src]=\"imagePreview\" alt=\"Image Preview\" />\n    </div>\n\n    <button mat-raised-button color=\"primary\" type=\"submit\" class=\"upload-btn\">\n      Upload\n    </button>\n  </form>\n\n  <div *ngIf=\"uploadedImages.length > 0\" class=\"image-list\">\n   <div style=\"display: flex;\"><h2>🖼 Uploaded Images </h2> &nbsp; <span><mat-icon>refresh</mat-icon></span></div> \n    <div class=\"image-grid\">\n      <img\n        *ngFor=\"let img of uploadedImages\"\n        [src]=\"img.url\"\n        (click)=\"setAsBackground(img.id)\"\n        title=\"Click to set as background\"\n      />\n\n      \n    </div>\n\n\n\n\n\n</div>\n<div><br>\n<h2>Select Background Color</h2><br>\n</div>\n<div>\n \n  \n <div><input type=\"text\" [(ngModel)]=\"colourData\"/>\n  <button (click)=\"addColor()\">ADD color</button>\n</div>\n<div style=\"display: flex; flex-wrap: wrap; gap: 10px;\">\n\n\n  <div \n    *ngFor=\"let color of Colours\"\n    [ngStyle]=\"getColorStyle(color.color)\"\n    class=\"color-box\"\n    (click)=\"selectColor(color)\">\n    {{ color.color}}\n  </div>\n</div>\n<div style=\"margin-top: 20px;\">\n  <button\n    mat-raised-button\n    [color]=\"isMaterialColor(selectedColor) ? selectedColor : null\"\n    [ngStyle]=\"!isMaterialColor(selectedColor) ? {'background-color': selectedColor, 'color': getTextColor(selectedColor)} : {}\">\n    Selected Color: {{ selectedColor || 'None' }}\n  </button>\n</div>\n  </div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ConfigService } from './config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private http: HttpClient, private configService: ConfigService) {}\n\n  //add user\n\n  public addUser(user: any) {\n    return this.http.post(`${this.configService.api_url}/auth/register`, user);\n  }\n\npublic getVersion(){\n  return this.http.get(`${this.configService.api_url}/auth/version`);\n}\n\n\n\npublic  getBgColours(){\n\n  return this.http.get(`${this.configService.image_url}/images`,{ responseType: 'text' }); \n}\n\npublic selectColor(color:any){\n return this.http.put(`${this.configService.image_url}/images/activate/`+color,color);\n}\n\npublic getActiveColor(){\n  return this.http.get(`${this.configService.image_url}/images/a`,{ responseType: 'text' }); \n}\n\npublic addColor(data:any){\n  return this.http.post(`${this.configService.image_url}/images`,data,{ responseType: 'text' });\n}\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdminGuard  {\r\n  constructor(private login: LoginService, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    if (this.login.isLoggedIn() && this.login.getUserRole() == 'ADMIN') {\r\n      return true;\r\n    }\r\n\r\n    this.router.navigate(['home']);\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n  standalone: true,\n  imports: [CommonModule, MatCardModule, MatButtonModule, MatIconModule]\n})\nexport class ProfileComponent implements OnInit {\n  user: any = null;\n  constructor(private login: LoginService) {}\n\n  ngOnInit(): void {\n    this.user = this.login.getUser();\n  }\n}\n","<mat-card *ngIf=\"user\">\n  <h1>Your Profile Details</h1>\n  <!-- {{ user | json }} -->\n  <mat-card-content>\n    <div class=\"bootstrap-wrapper\">\n      <div class=\"container\">\n        <div class=\"container text-center\">\n          <img\n            src=\"https://t4.ftcdn.net/jpg/03/46/93/61/360_F_346936114_RaxE6OQogebgAWTalE1myseY1Hbb5qPM.jpg\"\n            alt=\"\"\n            class=\"profile-image\"\n          />\n\n          <h1 class=\"mt20\">{{ user.firstName }} {{ user.lastName }}</h1>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-10 offset-md-1\">\n            <!-- //table Details  -->\n            <table class=\"table text-center\">\n              <tr>\n                <td>Username</td>\n                <td>{{ user.username }}</td>\n              </tr>\n              <tr>\n                <td>Userid</td>\n                <td>EXAM{{ user.id }}</td>\n              </tr>\n              <tr>\n                <td>Phone</td>\n                <td>{{ user.phone }}</td>\n              </tr>\n              <tr>\n                <td>Role</td>\n                <td>{{ user.authorities[0].authority }}</td>\n              </tr>\n              <tr>\n                <td>Status</td>\n                <td>{{ user.enabled ? \"ACTIVE\" : \"NOTACTIVE\" }}</td>\n              </tr>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </mat-card-content>\n  <mat-card-actions class=\"text-center\">\n    <button mat-raised-button color=\"primary\">UPDATE</button>\n    <button mat-raised-button color=\"accent\">SHARE</button>\n  </mat-card-actions>\n</mat-card>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NormalGuard  {\n  constructor(private login: LoginService, private router: Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    console.log('NormalGuard: Checking canActivate...');\n    const isLoggedIn = this.login.isLoggedIn();\n    const userRole = this.login.getUserRole();\n    console.log('NormalGuard: isLoggedIn:', isLoggedIn);\n    console.log('NormalGuard: userRole:', userRole);\n\n    if (isLoggedIn && userRole == 'NORMAL') {\n      console.log('NormalGuard: Access granted.');\n      return true;\n    }\n\n    console.log('NormalGuard: Access denied. Redirecting to login.');\n    this.router.navigate(['login']);\n    return false;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ConfigService } from './config.service';\n\n\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  public loginStatusSubject = new Subject<boolean>();\n\n  constructor(private http: HttpClient, private configService: ConfigService) {}\n\n  //current user: which is loggedin\n  public getCurrentUser(username) {\n    return this.http.get(`${this.configService.api_url}/auth/${username}`);\n  }\n\n  //generate token\n\n  public generateToken(loginData: any) {\n\n    \n    return this.http.post(`${this.configService.api_url}/auth/generate-token`, loginData);\n  }\n\n  //login user: set token in localStorage\n  public loginUser(token) {\n    localStorage.setItem('token', token);\n\n    return true;\n  }\n\n  //isLogin: user is logged in or not\n  public isLoggedIn() {\n    let tokenStr = localStorage.getItem('token');\n    if (tokenStr == undefined || tokenStr == '' || tokenStr == null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  // logout : remove token from local storage\n  public logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    return true;\n  }\n\n  //get token\n  public getToken() {\n    return localStorage.getItem('token');\n  }\n\n  //set userDetail\n  public setUser(user) {\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n\n  //getUser\n  public getUser() {\n    let userStr = localStorage.getItem('user');\n    if (userStr != null) {\n      return JSON.parse(userStr);\n    } else {\n      this.logout();\n      return null;\n    }\n  }\n\n  //get user role\n\n  public getUserRole() {\n    let user = this.getUser();\n    console.log(user)\n    return user.userRoles[0].role.roleId==44?\"ADMIN\":\"NORMAL\";\n    return user.authorities[0].authority;\n  }\n}\n","import { LocationStrategy, CommonModule } from '@angular/common';\nimport { ThisReceiver } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, RouterModule } from '@angular/router';\nimport { QuestionService } from 'src/app/services/question.service';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport Swal from 'sweetalert2';\nimport { FormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatProgressSpinnerModule,\n  ],\n})\nexport class StartComponent implements OnInit {\n  qid;\n  questions;\n\n  marksGot = 0;\n  correctAnswers = 0;\n  attempted = 0;\n\n  isSubmit = false;\n\n  timer: any;\n\n  constructor(\n    private locationSt: LocationStrategy,\n    private _route: ActivatedRoute,\n    private _question: QuestionService,\n    private _quiz: QuizService\n  ) {}\n\n  ngOnInit(): void {\n    this.preventBackButton();\n    this.qid = this._route.snapshot.params.qid;\n    console.log('StartComponent: Initial qid:', this.qid); // Log initial qid\n    this.loadQuestions();\n    console.log('StartComponent: isSubmit (ngOnInit):', this.isSubmit); // Log initial isSubmit\n  }\n  loadQuestions() {\n    console.log('StartComponent: Loading questions for qid:', this.qid); // Log question loading initiation\n    this._question.getQuestionsOfQuizForTest(this.qid).subscribe(\n      (data: any) => {\n        this.questions = data;\n        console.log('StartComponent: Questions loaded:', this.questions); // Log loaded questions\n        if (this.questions && this.questions.length > 0) {\n          this.timer = this.questions.length * 2 * 60;\n          console.log('StartComponent: Timer initialized to:', this.timer); // Log timer value\n          this.startTimer();\n        } else {\n          console.warn('StartComponent: No questions loaded or questions array is empty.');\n        }\n      },\n\n      (error) => {\n        console.log(error);\n        Swal.fire('Error', 'Error in loading questions of quiz', 'error');\n        console.error('StartComponent: Error loading questions:', error); // Log error\n      }\n    );\n  }\n\n  preventBackButton() {\n    history.pushState(null, null, location.href);\n    this.locationSt.onPopState(() => {\n      history.pushState(null, null, location.href);\n    });\n  }\n\n  submitQuiz() {\n    Swal.fire({\n      title: 'Do you want to submit the quiz?',\n      showCancelButton: true,\n      confirmButtonText: `Submit`,\n      icon: 'info',\n    }).then((e) => {\n      if (e.isConfirmed) {\n        this.evalQuiz();\n      }\n    });\n  }\n\n  startTimer() {\n    let t = window.setInterval(() => {\n      //code\n      if (this.timer <= 0) {\n        this.evalQuiz();\n        clearInterval(t);\n      } else {\n        this.timer--;\n      }\n    }, 1000);\n  }\n\n  getFormattedTime() {\n    let mm = Math.floor(this.timer / 60);\n    let ss = this.timer - mm * 60;\n    return `${mm} min : ${ss} sec`;\n  }\n\n  evalQuiz() {\n    console.log('StartComponent: evalQuiz() called. Submitting quiz...'); // Log evalQuiz call\n    this._question.evalQuiz(this.questions).subscribe(\n      (data: any) => {\n        console.log('StartComponent: Eval Quiz data received:', data); // Log eval quiz data\n        this.marksGot = data.marksGot;\n        this.correctAnswers = data.correctAnswers;\n        this.attempted = data.attempted;\n        this.isSubmit = true;\n        console.log('StartComponent: isSubmit after evalQuiz:', this.isSubmit); // Log isSubmit after eval\n      },\n      (error) => {\n        console.log(error);\n        console.error('StartComponent: Error evaluating quiz:', error); // Log error\n      }\n    );\n  }\n}\n","<div class=\"bootstrap-wrapper\" *ngIf=\"!isSubmit\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">\n        <!-- instructions -->\n        <h3>instructions</h3>\n      </div>\n      <div class=\"col-md-10 offset-md-1\">\n        <!-- Main Card for Timer and Questions -->\n        <mat-card class=\"mt10 mr-5 justify-content-center\">\n          <mat-card-content>\n            <ng-container *ngIf=\"questions\">\n              <h1 class=\"text-center\">\n                On Going Quiz <b>{{ questions[0].quiz.title }}</b>\n              </h1>\n            </ng-container>\n\n            <!-- Timer Section -->\n            <div class=\"timer-section-container mb10\">\n                <mat-card class=\"timer-card\">\n                  <mat-card-header>\n                    <mat-card-title> Progress </mat-card-title>\n                    <mat-card-subtitle>\n                      Quiz will automatically submitted when timer reaches to\n                      <b>0:0</b>\n                    </mat-card-subtitle>\n                  </mat-card-header>\n                  <mat-card-content>\n                    <h1 class=\"text-center\">{{ getFormattedTime() }}</h1>\n                    <mat-spinner\n                      mode=\"determinate\"\n                      color=\"accent\"\n                      style=\"margin: auto\"\n                      [value]=\"(timer / (this.questions.length * 2 * 60)) * 100\"\n                    ></mat-spinner>\n                  </mat-card-content>\n                </mat-card>\n              </div>\n\n            <mat-divider class=\"mb20\"></mat-divider>\n\n            <!-- Questions Section -->\n            <div *ngFor=\"let q of questions; let i = index\" class=\"mb20\">\n              <p>\n                <b>Q {{ i + 1 }})</b>\n                <span class=\"ml10\" [innerHTML]=\"q.content\"></span>\n              </p>\n\n              <mat-divider></mat-divider>\n              <br />\n\n              <div class=\"row mt20\">\n                <div class=\"col-md-6\">\n                  <input\n                    type=\"radio\"\n                    [value]=\"q.option1\"\n                    [name]=\"i\"\n                    [(ngModel)]=\"q.givenAnswer\"\n                  />{{ q.option1 }}\n                </div>\n                <div class=\"col-md-6\">\n                  <input\n                    type=\"radio\"\n                    [value]=\"q.option2\"\n                    [name]=\"i\"\n                    [(ngModel)]=\"q.givenAnswer\"\n                  />{{ q.option2 }}\n                </div>\n              </div>\n\n              <div class=\"row mt20\">\n                <div class=\"col-md-6\">\n                  <input\n                    type=\"radio\"\n                    [value]=\"q.option3\"\n                    [name]=\"i\"\n                    [(ngModel)]=\"q.givenAnswer\"\n                  />{{ q.option3 }}\n                </div>\n                <div class=\"col-md-6\">\n                  <input\n                    type=\"radio\"\n                    [value]=\"q.option4\"\n                    [name]=\"i\"\n                    [(ngModel)]=\"q.givenAnswer\"\n                  />{{ q.option4 }}\n                </div>\n              </div>\n            </div>\n\n            <div class=\"container text-center mt20\">\n              <button (click)=\"submitQuiz()\" mat-raised-button color=\"primary\">\n                Submit Quiz\n              </button>\n            </div>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- show the result -->\n<div class=\"bootstrap-wrapper\" *ngIf=\"isSubmit\">\n  <div class=\"row mt20\">\n    <div class=\"col-md-6 offset-md-3\">\n      <mat-card>\n        <mat-card-header>\n          <mat-card-title> Quiz Result </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"text-center\">\n          <h1>Marks Got : {{ marksGot }}</h1>\n          <h1>Correct Answers : {{ correctAnswers }}</h1>\n          <h1>Questions Attempted :{{ attempted }}</h1>\n        </mat-card-content>\n        <mat-card-actions class=\"text-center\">\n          <button mat-raised-button color=\"primary\">Print</button>\n          <button\n            mat-raised-button\n            color=\"accent\"\n            [routerLink]=\"'/user-dashboard/0'\"\n          >\n            Home\n          </button>\n        </mat-card-actions>\n      </mat-card>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Welcome to ADMIN Panel</h1>\n","// src/app/services/config.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  private config: any;\n\n  constructor(private http: HttpClient) { }\n\n  loadConfig() {\n    const timestamp = new Date().getTime();\n    return this.http.get(`./assets/config.json?t=${timestamp}`)\n      .toPromise()\n      .then(data => {\n        this.config = data;\n      });\n  }\n\n  get api_url() {\n    if (!this.config) {\n      throw Error('Config file not loaded!');\n    }\n    return this.config.api_url;\n  }\n\n  get image_url() {\n    if (!this.config) {\n      throw Error('Config file not loaded!');\n    }\n    return this.config.image_url;\n  }\n\n  get rabbitmq_url() {\n    if (!this.config) {\n      throw Error('Config file not loaded!');\n    }\n    return this.config.rabbitmq_url;\n  }\n\n  get upload_img_enabled() {\n    if (!this.config) {\n      throw Error('Config file not loaded!');\n    }\n    return this.config.upload_img_enabled;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { ActivatedRoute, RouterModule } from '@angular/router';\nimport { QuestionService } from 'src/app/services/question.service';\nimport Swal from 'sweetalert2';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-view-quiz-questions',\n  templateUrl: './view-quiz-questions.component.html',\n  styleUrls: ['./view-quiz-questions.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatCardModule,\n    MatTableModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatIconModule,\n  ],\n})\nexport class ViewQuizQuestionsComponent implements OnInit {\n  qId;\n  qTitle;\n  questions = [];\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _question: QuestionService,\n    private _snak: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.qId = this._route.snapshot.params.qid;\n    this.qTitle = this._route.snapshot.params.title;\n    console.log('qId:', this.qId, 'qTitle:', this.qTitle); // Added log\n    this._question.getQuestionsOfQuiz(this.qId).subscribe(\n      (data: any) => {\n        console.log(data);\n        this.questions = data;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  //delete quesion\n  deleteQuestion(qid) {\n    Swal.fire({\n      icon: 'info',\n      showCancelButton: true,\n      confirmButtonText: 'Delete',\n      title: 'Are you sure , want to delete this question?',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        //confim\n        this._question.deleteQuestion(qid).subscribe(\n          (data) => {\n            this._snak.open('Question Deleted ', '', {\n              duration: 3000,\n            });\n            this.questions = this.questions.filter((q) => q.quesId != qid);\n          },\n\n          (error) => {\n            this._snak.open('Error in deleting questions', '', {\n              duration: 3000,\n            });\n            console.log(error);\n          }\n        );\n      }\n    });\n  }\n}\n","<h1 class=\"mt20\">Questions of {{ qTitle }}</h1>\n\n<div class=\"bootstrap-wrapper\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"container text-center\">\n        <button\n          mat-raised-button\n          color=\"accent\"\n          [routerLink]=\"'/admin/add-question/' + qId + '/' + qTitle\"\n        >\n          Add Question\n        </button>\n      </div>\n\n      <mat-card *ngFor=\"let q of questions; let i = index\" class=\"mt20\">\n        <mat-card-content>\n          <p>\n            <b> Q {{ i + 1 }})</b>\n            <span class=\"ml20\" [innerHTML]=\"q.content\"></span>\n          </p>\n\n          <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <p><b>1)</b> {{ q.option1 }}</p>\n              </div>\n              <div class=\"col-md-6\">\n                <p><b>2)</b> {{ q.option2 }}</p>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <p><b>3)</b> {{ q.option3 }}</p>\n              </div>\n              <div class=\"col-md-6\">\n                <p><b>4)</b> {{ q.option4 }}</p>\n              </div>\n            </div>\n            <mat-divider></mat-divider>\n            <p class=\"mt20\"><b>Correct Answer:</b> {{ q.answer }}</p>\n          </div>\n        </mat-card-content>\n\n        <mat-card-action>\n          <button mat-button (click)=\"deleteQuestion(q.quesId)\" color=\"warn\">\n            Delete\n          </button>\n          <button mat-button color=\"primary\">Update</button>\n        </mat-card-action>\n      </mat-card>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterModule } from '@angular/router';\nimport { FlagsUiService } from 'src/app/flags-ui.service'; // Import FlagsUiService\n\n@Component({\n  selector: 'app-sidebar-user',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatCardModule,\n    MatListModule,\n    MatIconModule,\n    MatSnackBarModule,\n  ],\n})\nexport class SidebarComponent implements OnInit {\n  categories;\n  backgroundColor: string = 'pink'; // Initialize with a default color\n\n  constructor(private _cat: CategoryService, private _snack: MatSnackBar, private flagService: FlagsUiService) {}\n\n  ngOnInit(): void {\n    this._cat.categories().subscribe(\n      (data: any) => {\n        this.categories = data;\n      },\n      (error) => {\n        this._snack.open('Error in loading categories from server', '', {\n          duration: 3000,\n        });\n      }\n    );\n\n    this.flagService.getcolor.subscribe(\n      (data: any) => {\n        if (data && data.color) {\n          this.backgroundColor = data.color;\n        }\n      }\n    );\n  }\n}\n","<mat-card [style.background-color]=\"backgroundColor\">\n  <mat-action-list class=\"scrollable-sidebar\">\n    <div mat-subheader>Available Categories</div>\n\n    <button mat-list-item routerLink=\"/user-dashboard/0\">\n      <mat-icon mat-list-icon>quiz</mat-icon> All Quizzes\n    </button>\n    <button\n      [routerLink]=\"'/user-dashboard/' + c.cid\"\n      mat-list-item\n      *ngFor=\"let c of categories\"\n    >\n      <mat-icon mat-list-icon>quiz</mat-icon> {{ c.title }}\n    </button>\n  </mat-action-list>\n</mat-card>\n<!-- {{ categories | json }} -->\n","import { Component, Input, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RabbitmqService } from '../rabbitmq.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ConfigService } from '../services/config.service';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.css'],\n  standalone: true,\n  imports: [CommonModule, FormsModule]\n})\nexport class NotificationComponent implements OnInit {\n  messages: string[] = [];\n  newMessage = '';\n  checkUorA: boolean = false;\n\n  @Input() type: 'success' | 'error' | 'info' | 'warning' = 'info';\n  @Input() visible: boolean = false;\n\n  history: string;\n  hflag: boolean = false;\n  visibleMessages: string[] = [];\n\n  // Toast variables\n  toastVisible: boolean = false;\n  toastMessage: string = '';\n  toastType: 'success' | 'error' | 'info' | 'warning' = 'info';\n  private toastTimeout: any;\n\n  constructor(\n    private websocketService: RabbitmqService,\n    private http: HttpClient,\n    private configService: ConfigService\n  ) {}\n\n  ngOnInit(): void {\n    this.history = 'See all messages from Redis memory';\n    const check = localStorage.getItem('username');\n    if (check === 'admin') this.checkUorA = true;\n\n    this.websocketService.messageStream$.subscribe((msg: string) => {\n      this.messages.push(msg);\n      this.updateVisibleMessages();\n      this.showToast(msg, 'info');\n    });\n  }\n\n  toggleVisibility() {\n    this.visible = !this.visible;\n  }\n\n  hide() {\n    this.visible = false;\n  }\n\n  getHistory() {\n    this.hflag = !this.hflag;\n    this.history = this.hflag ? 'Hide all from Redis memory' : 'See all messages from Redis memory';\n\n    this.http.get(`${this.configService.rabbitmq_url}/api/messages/history`, { responseType: 'text' })\n      .subscribe((response: any) => {\n        this.messages = JSON.parse(response);\n        this.updateVisibleMessages();\n      });\n  }\n\n  updateVisibleMessages() {\n    this.visibleMessages = this.hflag ? this.messages : this.messages.slice(-2);\n  }\n\n  sendMessage(event: Event) {\n    event.preventDefault();\n    if (!this.newMessage.trim()) return;\n\n    this.http.post(`${this.configService.rabbitmq_url}/api/messages/send`, this.newMessage, { responseType: 'text' })\n      .subscribe(() => {\n        this.newMessage = '';\n      });\n  }\n\n  // Toast notification method\n  showToast(message: string, type: 'success' | 'error' | 'info' | 'warning') {\n    this.toastMessage = message;\n    this.toastType = type;\n    this.toastVisible = true;\n\n    if (this.toastTimeout) clearTimeout(this.toastTimeout);\n\n    this.toastTimeout = setTimeout(() => {\n      this.toastVisible = false;\n    }, 3000);\n  }\n\n  // Optional backward compatibility for old calls\n  showNotificationWithTimeout(message: string, type: 'success' | 'error' | 'info' | 'warning') {\n    this.showToast(message, type);\n  }\n}\n","<div *ngIf=\"visible\" class=\"notification\" [ngClass]=\"type\">\n  <div class=\"container\">\n    <h2>\n      RabbitMQ Realtime Messaging\n      <button (click)=\"hide()\">✖</button>\n    </h2>\n\n    <div *ngIf=\"checkUorA\">\n      <!-- prevent reload with $event -->\n      <form (ngSubmit)=\"sendMessage($event)\">\n        <input\n          type=\"text\"\n          [(ngModel)]=\"newMessage\"\n          name=\"message\"\n          required\n          placeholder=\"Type your message\"\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n\n    <div class=\"message-box\">\n      <p *ngFor=\"let msg of visibleMessages\">\n        <span>Message:-</span> {{ msg }}\n      </p>\n    </div>\n\n    <a (click)=\"getHistory()\">{{ history }}</a>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { UserService } from './services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlagsUiService {\n\n  private messageSource = new BehaviorSubject<any>(null);\n  currentMessage$ = this.messageSource.asObservable();\n\n  // Start with default color\n  private bgColor = new BehaviorSubject<any>({ color: 'accept' });\n  getcolor = this.bgColor.asObservable();\n\n  private colorFetched: boolean = false; // Tracks if API was already called\n\n  constructor(private userService: UserService) { }\n\n  /**\n   * Call this in component ngOnInit() – it will fetch from API only once.\n   */\n  initColorOnce() {\n    if (!this.colorFetched) {\n      this.colorFetched = true;\n      this.fetchColorFromServer();\n    }\n  }\n\n  /**\n   * Called once on init if no color has been fetched\n   */\n  private fetchColorFromServer() {\n    this.userService.getActiveColor().subscribe({\n      next: (data: any) => {\n        const parsed = typeof data === 'string' ? JSON.parse(data) : data;\n        console.log('Fetched color from server:', parsed);\n        this.bgColor.next(parsed); // full object like { color: 'red' }\n      },\n      error: (err) => {\n        console.error('Failed to load active color', err);\n      }\n    });\n  }\n\n  /**\n   * When user selects or updates a color.\n   */\nsetColor(data: any) {\n  console.log(\"flag data:\", JSON.stringify(data));\n\n  if (!data || !data.color) {\n    console.warn(\"Invalid color data provided to setColor:\", data);\n    return;\n  }\n\n  this.userService.selectColor(data.color).subscribe(\n    (response: any) => {\n      console.log(\"Color from backend:\", response);\n\n     \n    },\n    (error) => {\n      console.error(\"Error for activating color:\", error);\n    }\n  );\n   this.bgColor.next(data);\n}\n  /**\n   * Optional method for other component communication\n   */\n  changeMessage(data: any) {\n    this.messageSource.next(data);\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ConfigService } from './config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  constructor(private _http: HttpClient, private configService: ConfigService) {}\n  //load all the cateogries\n  public categories() {\n    return this._http.get(`${this.configService.api_url}/service1/category/getList`);\n  }\n\n  //add new category\n  public addCategory(category) {\n    return this._http.post(`${this.configService.api_url}/service1/category/create`, category);\n  }\n}\n","// src/main.ts\nimport { enableProdMode, provideAppInitializer, inject } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { AppComponent } from './app/app.component';\nimport { environment } from './environments/environment';\nimport { provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport { ConfigService } from './app/services/config.service';\nimport { authInterceptorProviders } from './app/services/auth.interceptor';\nimport { provideRouter, withHashLocation, Routes } from '@angular/router';\n\n// Import your components\nimport { HomeComponent } from './app/pages/home/home.component';\nimport { LoginComponent } from './app/pages/login/login.component';\nimport { SignupComponent } from './app/pages/signup/signup.component';\nimport { DashboardComponent } from './app/pages/admin/dashboard/dashboard.component';\nimport { UserDashboardComponent } from './app/pages/user/user-dashboard/user-dashboard.component';\nimport { ProfileComponent } from './app/pages/profile/profile.component';\nimport { WelcomeComponent } from './app/pages/admin/welcome/welcome.component';\nimport { ViewCategoriesComponent } from './app/pages/admin/view-categories/view-categories.component';\nimport { AddCategoryComponent } from './app/pages/admin/add-category/add-category.component';\nimport { ViewQuizzesComponent } from './app/pages/admin/view-quizzes/view-quizzes.component';\nimport { AddQuizComponent } from './app/pages/admin/add-quiz/add-quiz.component';\nimport { UpdateQuizComponent } from './app/pages/admin/update-quiz/update-quiz.component';\nimport { ViewQuizQuestionsComponent } from './app/pages/admin/view-quiz-questions/view-quiz-questions.component';\nimport { AddQuestionComponent } from './app/pages/admin/add-question/add-question.component';\nimport { LoadQuizComponent } from './app/pages/user/load-quiz/load-quiz.component';\nimport { InstructionsComponent } from './app/pages/user/instructions/instructions.component';\nimport { StartComponent } from './app/pages/user/start/start.component';\nimport { AdminGuard } from './app/services/admin.guard';\nimport { NormalGuard } from './app/services/normal.guard';\nimport { ImageUploadComponent } from './app/image-upload/image-upload.component';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n// Define routes\nconst routes: Routes = [\n  { path: '', component: HomeComponent, pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'login', component: LoginComponent },\n  {\n    path: 'admin',\n    component: DashboardComponent,\n    canActivate: [AdminGuard],\n    children: [\n      { path: '', component: WelcomeComponent, pathMatch: 'full' },\n      { path: 'profile', component: ProfileComponent },\n      { path: 'categories', component: ViewCategoriesComponent },\n      { path: 'add-category', component: AddCategoryComponent },\n      { path: 'quizzes', component: ViewQuizzesComponent },\n      { path: 'image-upload', component: ImageUploadComponent },\n      { path: 'add-quiz', component: AddQuizComponent },\n      { path: 'quiz/:qid', component: UpdateQuizComponent },\n      { path: 'view-questions/:qid/:title', component: ViewQuizQuestionsComponent },\n      { path: 'add-question/:qid/:title', component: AddQuestionComponent },\n    ],\n  },\n  {\n    path: 'user-dashboard',\n    component: UserDashboardComponent,\n    canActivate: [NormalGuard],\n    children: [\n      { path: ':catId', component: LoadQuizComponent },\n      { path: 'instructions/:qid', component: InstructionsComponent },\n    ],\n  },\n  { path: 'start/:qid', component: StartComponent, canActivate: [NormalGuard] },\n];\n\n// Bootstrap Angular with hash routing and app initializer\nbootstrapApplication(AppComponent, {\n  providers: [\n    authInterceptorProviders,\n    provideHttpClient(withInterceptorsFromDi()),\n    ConfigService,\n    provideAnimations(),\n    provideRouter(routes, withHashLocation()), // ✅ hash routing to fix 404 on refresh\n   provideAppInitializer(() => {\n  const configService = inject(ConfigService);\n  return configService.loadConfig(); // ✅ return Promise<void> directly\n})\n,\n  ],\n}).catch(err => console.error(err));\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ConfigService } from './config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuizService {\n  constructor(private _http: HttpClient, private configService: ConfigService) {}\n\n  public quizzes() {\n    return this._http.get(`${this.configService.api_url}/service2/quiz/getList`);\n  }\n\n  //add quiz\n  public addQuiz(quiz) {\n    return this._http.post(`${this.configService.api_url}/service2/quiz/create`, quiz);\n  }\n\n  //delete quiz\n  public deleteQuiz(qId) {\n    return this._http.delete(`${this.configService.api_url}/service2/quiz/${qId}`);\n  }\n\n  //get the single quiz\n\n  public getQuiz(qId) {\n    return this._http.get(`${this.configService.api_url}/service2/quiz/${qId}`);\n  }\n\n  //update quiz\n  public updateQuiz(quiz) {\n    return this._http.put(`${this.configService.api_url}/service2/quiz/`, quiz);\n  }\n\n  //get quizzes of category\n  public getQuizzesOfCategory(cid) {\n    return this._http.get(`${this.configService.api_url}/service2/quiz/category/${cid}`);\n  }\n  //qet active quizzes\n  public getActiveQuizzes() {\n    return this._http.get(`${this.configService.api_url}/service2/quiz/active`);\n  }\n\n  //get active quizzes of category\n  public getActiveQuizzesOfCategory(cid) {\n    return this._http.get(`${this.configService.api_url}/service2/quiz/category/active/${cid}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  fullText: string = `\r\n<h1>Welcome to the Exam Portal!</h1>\r\n\r\n<h2>This system helps manage:</h2>\r\n- Students\r\n- Exams\r\n- Results\r\n- Reports\r\nwe take the Exam and Imporve our knowlege .\r\nThis Application we helps to develop the skils and helps improve our skills and talents .\r\nFor exams its is best choice to prepare.\r\nEasily track and manage all data in one place.\r\n  `;\r\n\r\n  typedText: string = \"\"; // will hold the text being typed\r\n  i: number = 0;          // pointer to current character\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.typingEffect();\r\n  }\r\n\r\n  typingEffect() {\r\n    if (this.i < this.fullText.length) {\r\n      this.typedText += this.fullText.charAt(this.i);\r\n      this.i++;\r\n      setTimeout(() => this.typingEffect(), 50); // typing speed\r\n    }\r\n  }\r\n}\r\n","<div class=\"typing-container\">\r\n  <p [innerHTML]=\"typedText\"></p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SidebarComponent } from '../sidebar/sidebar.component'; // Import the admin sidebar\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    SidebarComponent, // Import the admin sidebar component\n  ],\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bootstrap-wrapper\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">\n        <app-sidebar></app-sidebar>\n      </div>\n\n      <div class=\"col-md-10\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, RouterModule } from '@angular/router';\nimport { QuestionService } from 'src/app/services/question.service';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport Swal from 'sweetalert2';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\nimport { MatSnackBar } from '@angular/material/snack-bar'; // Import MatSnackBar\n\n@Component({\n  selector: 'app-add-question',\n  templateUrl: './add-question.component.html',\n  styleUrls: ['./add-question.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatButtonModule,\n    CKEditorModule,\n  ],\n})\nexport class AddQuestionComponent implements OnInit {\n  public Editor = ClassicEditor;\n  qId;\n  qTitle;\n  question = {\n    quiz: {},\n    content: '',\n    option1: '',\n    option2: '',\n    option3: '',\n    option4: '',\n    answer: '',\n  };\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _question: QuestionService,\n    private _snack: MatSnackBar // Inject MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.qId = this._route.snapshot.params.qid;\n    this.qTitle = this._route.snapshot.params.title;\n    this.question.quiz['qId'] = this.qId;\n  }\n\n  formSubmit() {\n    console.log('AddQuestionComponent: Form submission initiated.');\n    console.log('Question data (before validation):', this.question);\n\n    if (this.question.content.trim() == '' || this.question.content == null) {\n      this._snack.open('Question content is required !!', '', { duration: 3000 });\n      console.warn('AddQuestionComponent: Validation failed - content missing.');\n      return;\n    }\n\n    if (this.question.option1.trim() == '' || this.question.option1 == null) {\n      this._snack.open('Option 1 is required !!', '', { duration: 3000 });\n      console.warn('AddQuestionComponent: Validation failed - option1 missing.');\n      return;\n    }\n    if (this.question.option2.trim() == '' || this.question.option2 == null) {\n      this._snack.open('Option 2 is required !!', '', { duration: 3000 });\n      console.warn('AddQuestionComponent: Validation failed - option2 missing.');\n      return;\n    }\n    if (this.question.answer.trim() == '' || this.question.answer == null) {\n      this._snack.open('Answer is required !!', '', { duration: 3000 });\n      console.warn('AddQuestionComponent: Validation failed - answer missing.');\n      return;\n    }\n\n    //form submit\n    console.log('AddQuestionComponent: Validation passed. Attempting to add question...');\n    this._question.addQuestion(this.question).subscribe(\n      (data: any) => {\n        console.log('AddQuestionComponent: Question added successfully:', data);\n        Swal.fire('Success ', 'Question Added. Add Another one', 'success');\n        this.question.content = '';\n        this.question.option1 = '';\n        this.question.option2 = '';\n        this.question.option3 = '';\n        this.question.option4 = '';\n        this.question.answer = '';\n      },\n      (error) => {\n        console.error('AddQuestionComponent: Error in adding question:', error);\n        Swal.fire('Error', 'Error in adding question', 'error');\n      }\n    );\n  }\n}\n","<div class=\"bootstrap-wrapper\">\n  <div class=\"row mt20\">\n    <div class=\"col-md-12\">\n      <h1>\n        Add Question to <span style=\"font-weight: bold\">{{ qTitle }}</span>\n      </h1>\n\n      <mat-card>\n        <mat-card-header>\n          <mat-card-subtitle>\n            Enter the detail of the new question\n          </mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n          <form class=\"mt20\" (submit)=\"formSubmit()\">\n            <!-- content field -->\n\n            <mat-form-field class=\"w100\">\n              <mat-label>Write question content</mat-label>\n              <textarea\n                required\n                rows=\"8\"\n                [(ngModel)]=\"question.content\"\n                name=\"content\"\n                matInput\n                placeholder=\"Enter here\"\n              ></textarea>\n            </mat-form-field>\n\n            <ckeditor\n              [editor]=\"Editor\"\n              name=\"content\"\n              [(ngModel)]=\"question.content\"\n            ></ckeditor>\n\n            <!-- options -->\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <!-- option1 -->\n\n                <mat-form-field class=\"w100\">\n                  <mat-label>Enter Option1</mat-label>\n                  <input\n                    required\n                    [(ngModel)]=\"question.option1\"\n                    name=\"option1\"\n                    type=\"text\"\n                    matInput\n                  />\n                </mat-form-field>\n              </div>\n              <div class=\"col-md-6\">\n                <!-- option2 -->\n                <mat-form-field class=\"w100\">\n                  <mat-label>Enter Option2</mat-label>\n                  <input\n                    required\n                    [(ngModel)]=\"question.option2\"\n                    name=\"option2\"\n                    type=\"text\"\n                    matInput\n                  />\n                </mat-form-field>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <!-- option3 -->\n                <mat-form-field class=\"w100\">\n                  <mat-label>Enter Option3</mat-label>\n                  <input\n                    [(ngModel)]=\"question.option3\"\n                    name=\"option3\"\n                    type=\"text\"\n                    matInput\n                  />\n                </mat-form-field>\n              </div>\n              <div class=\"col-md-6\">\n                <!-- option4 -->\n                <mat-form-field class=\"w100\">\n                  <mat-label>Enter Option4</mat-label>\n                  <input\n                    [(ngModel)]=\"question.option4\"\n                    name=\"option4\"\n                    type=\"text\"\n                    matInput\n                  />\n                </mat-form-field>\n              </div>\n            </div>\n\n            <!-- answer -->\n            <mat-form-field class=\"w100\">\n              <mat-label>Select Answer</mat-label>\n              <mat-select required [(ngModel)]=\"question.answer\" name=\"answer\">\n                <mat-option\n                  *ngIf=\"question.option1\"\n                  [value]=\"question.option1\"\n                  >{{ question.option1 }}</mat-option\n                >\n                <mat-option\n                  *ngIf=\"question.option2\"\n                  [value]=\"question.option2\"\n                  >{{ question.option2 }}</mat-option\n                >\n                <mat-option\n                  *ngIf=\"question.option3\"\n                  [value]=\"question.option3\"\n                  >{{ question.option3 }}</mat-option\n                >\n                <mat-option\n                  *ngIf=\"question.option4\"\n                  [value]=\"question.option4\"\n                  >{{ question.option4 }}</mat-option\n                >\n              </mat-select>\n            </mat-form-field>\n\n            <div class=\"container text-center\">\n              <button mat-raised-button color=\"accent\">Add</button>\n            </div>\n          </form>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</div>\n\n<!-- {{ question | json }} -->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private login: LoginService) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    //add the jwt token (localStorage) request\r\n    let authReq = req;\r\n    const token = this.login.getToken();\r\n    console.log('inside interceptor');\r\n\r\n    if (token != null) {\r\n      authReq = authReq.clone({\r\n        setHeaders: { Authorization: `Bearer ${token}` },\r\n      });\r\n    }\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthInterceptor,\r\n    multi: true,\r\n  },\r\n];\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ConfigService } from './config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuestionService {\n  constructor(private _http: HttpClient, private configService: ConfigService) {}\n\n  public getQuestionsOfQuiz(qid) {\n    return this._http.get(`${this.configService.api_url}/service1/question/quiz/all/${qid}`);\n  }\n\n  public getQuestionsOfQuizForTest(qid) {\n    return this._http.get(`${this.configService.api_url}/service1/question/quiz/${qid}`);\n  }\n\n  //add question\n  public addQuestion(question) {\n    return this._http.post(`${this.configService.api_url}/service1/question/`, question);\n  }\n  //delete question\n  public deleteQuestion(questionId) {\n    return this._http.delete(`${this.configService.api_url}/service1/question/${questionId}`);\n  }\n\n  //eval quiz\n  public evalQuiz(questions) {\n    return this._http.post(`${this.configService.api_url}/service1/question/eval-quiz`, questions);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UserService } from 'src/app/services/user.service';\nimport Swal from 'sweetalert2';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatCardModule,\n    MatSnackBarModule,\n  ],\n})\nexport class SignupComponent implements OnInit {\n  constructor(private userService: UserService, private snack: MatSnackBar) {}\n\n  public user = {\n    username: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n  };\n\n  ngOnInit(): void {}\n\n  formSubmit() {\n    console.log(this.user);\n    if (this.user.username == '' || this.user.username == null) {\n      // alert('User is required !!');\n      this.snack.open('Username is required !! ', '', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    if (this.user.password == '' || this.user.password == null) {\n      // alert('User is required !!');\n      this.snack.open('Password is required !! ', '', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    //validate\n\n    //addUser: userservice\n    this.userService.addUser(this.user).subscribe(\n      (data: any) => {\n        //success\n        console.log(data);\n        //alert('success');\n        Swal.fire('Successfully done !!', 'User id is ' + data.id, 'success');\n      },\n      (error) => {\n        //error\n        console.log(error);\n        // alert('something went wrong');\n        this.snack.open(error.error.text, '', {\n          duration: 3000,\n        });\n      }\n    );\n  }\n\n  //this.user\n}\n","<div class=\"bootstrap-wrapper\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3\">\n        <mat-card>\n          <div class=\"container text-center\">\n            <img src=\"../../../assets/logo.png\" alt=\"\" />\n          </div>\n\n          <h1 class=\"text-center\">Register Here !!</h1>\n\n          <!-- {{ user | json }} -->\n\n          <form (ngSubmit)=\"formSubmit()\">\n            <!-- Username field -->\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\n              <mat-label>User Name</mat-label>\n              <input\n                required\n                [(ngModel)]=\"user.username\"\n                name=\"username\"\n                matInput\n                placeholder=\"Enter here\"\n              />\n              <mat-hint>Username must be unique !!</mat-hint>\n            </mat-form-field>\n\n            <!-- Password field -->\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\n              <mat-label>User Password</mat-label>\n              <input\n                required\n                [(ngModel)]=\"user.password\"\n                name=\"password\"\n                type=\"password\"\n                matInput\n                placeholder=\"Enter here\"\n              />\n            </mat-form-field>\n\n            <!-- first name  -->\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\n              <mat-label>First Name</mat-label>\n              <input\n                required\n                [(ngModel)]=\"user.firstName\"\n                name=\"firstName\"\n                matInput\n                placeholder=\"Enter here\"\n              />\n            </mat-form-field>\n\n            <!-- lastname -->\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\n              <mat-label>Last Name</mat-label>\n              <input\n                required\n                [(ngModel)]=\"user.lastName\"\n                name=\"lastName\"\n                matInput\n                placeholder=\"Enter here\"\n              />\n            </mat-form-field>\n\n            <!-- email -->\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\n              <mat-label>Email Address</mat-label>\n              <input\n                required\n                [(ngModel)]=\"user.email\"\n                name=\"email\"\n                type=\"email\"\n                matInput\n                placeholder=\"Enter here\"\n              />\n            </mat-form-field>\n\n            <!-- phone number -->\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\n              <mat-label>Phone Number</mat-label>\n              <input\n                required\n                [(ngModel)]=\"user.phone\"\n                name=\"phone\"\n                type=\"number\"\n                matInput\n                placeholder=\"Enter here\"\n              />\n            </mat-form-field>\n\n            <div class=\"container text-center\">\n              <button type=\"submit\" mat-raised-button color=\"primary\">\n                Register\n              </button>\n              <button\n                type=\"button\"\n                style=\"margin-left: 20px\"\n                mat-raised-button\n                color=\"accent\"\n              >\n                Clear\n              </button>\n            </div>\n          </form>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { Router, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSnackBarModule,\n  ],\n})\nexport class LoginComponent implements OnInit {\n  loginData = {\n    username: '',\n    password: '',\n  };\n\n  constructor(\n    private snack: MatSnackBar,\n    private login: LoginService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  formSubmit() {\n    console.log('login btn clicked');\n\n    if (\n      this.loginData.username.trim() == '' ||\n      this.loginData.username == null\n    ) {\n      this.snack.open('Username is required !! ', '', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    if (\n      this.loginData.password.trim() == '' ||\n      this.loginData.password == null\n    ) {\n      this.snack.open('Password is required !! ', '', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    //request to server to generate token\n    this.login.generateToken(this.loginData).subscribe(\n      (data: any) => {\n        localStorage.setItem(\"username\",this.loginData.username);\n        console.log('success');\n        console.log(data);\n\n        //login...\n        this.login.loginUser(data.token);\n\n        this.login.getCurrentUser(this.loginData.username).subscribe((user: any) => {\n          this.login.setUser(user);\n          console.log(this.login.getUserRole()+\"??????????????\");\n          //redirect ...ADMIN: admin-dashboard\n          //redirect ...NORMAL:normal-dashboard\n          if (this.login.getUserRole() == 'ADMIN') {\n            //admin dashboard\n            // window.location.href = '/admin';\n            this.router.navigate(['admin']);\n            this.login.loginStatusSubject.next(true);\n          } else if (this.login.getUserRole() == 'NORMAL') {\n            //normal user dashbaord\n            // window.location.href = '/user-dashboard';\n            this.router.navigate(['user-dashboard/0']);\n            this.login.loginStatusSubject.next(true);\n          } else {\n            this.login.logout();\n          }\n        });\n      },\n      (error) => {\n        console.log('Error !');\n        console.log(error);\n        this.snack.open('Invalid Details !! Try again', '', {\n          duration: 3000,\n        });\n      }\n    );\n  }\n}\n","<div class=\"logincard \">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-10 offset-md-1\">\n        <mat-card>\n          <div class=\"container text-center\">\n            <img src=\"../../../assets/logo.png\" alt=\"\" />\n          </div>\n\n          <h1 class=\"text-center\">Login Here !!</h1>\n\n          <!-- {{ loginData | json }} -->\n          <form class=\"form\" (ngSubmit)=\"formSubmit()\">\n            <!-- username field -->\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\n              <mat-label>User Name</mat-label>\n              <input\n                [(ngModel)]=\"loginData.username\"\n                name=\"username\"\n                required\n                matInput\n                placeholder=\"Enter here\"\n              />\n             \n            </mat-form-field>\n\n            <!-- password field  -->\n\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\n              <mat-label>User Password</mat-label>\n              <input\n                [(ngModel)]=\"loginData.password\"\n                name=\"password\"\n                type=\"password\"\n                required\n                matInput\n                placeholder=\"Enter here\"\n              />\n            </mat-form-field>\n\n            <div class=\"container text-center\">\n              <button mat-raised-button color=\"primary\" type=\"submit\">\n                Login\n              </button>\n              <button class=\"ml10\" mat-raised-button color=\"accent\">\n                Reset\n              </button>\n            </div>\n          </form>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CategoryService } from 'src/app/services/category.service';\nimport Swal from 'sweetalert2';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'app-add-category',\n  templateUrl: './add-category.component.html',\n  styleUrls: ['./add-category.component.css'],\n  standalone: true,\n  imports: [MatCardModule, MatFormFieldModule, MatInputModule, FormsModule, CommonModule, MatSnackBarModule, MatButtonModule],\n})\nexport class AddCategoryComponent implements OnInit {\n  category = {\n    title: '',\n    description: '',\n  };\n\n  constructor(\n    private _category: CategoryService,\n    private _snack: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {}\n\n  formSubmit() {\n    if (this.category.title.trim() == '' || this.category.title == null) {\n      this._snack.open('Title Required !!', '', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    //all done\n\n    this._category.addCategory(this.category).subscribe(\n      (data: any) => {\n        this.category.title = '';\n        this.category.description = '';\n        console.log(data);\n        Swal.fire('Success !!', 'Category is added successfuly', 'success');\n      },\n      (error) => {\n        console.log(error);\n        Swal.fire('Error !!', 'Server error !!', 'error');\n      }\n    );\n  }\n}\n","<mat-card>\n  <h1>Add New Category</h1>\n\n  <mat-card-content>\n    <div class=\"bootstrap-wrapper\">\n      <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n          <form (ngSubmit)=\"formSubmit()\">\n            <mat-form-field class=\"w100\" appearance=\"outline\">\n              <mat-label>Title</mat-label>\n\n              <input\n                required\n                autofocus\n                type=\"text\"\n                name=\"title\"\n                matInput\n                placeholder=\"Enter here\"\n                [(ngModel)]=\"category.title\"\n              />\n            </mat-form-field>\n\n            <mat-form-field class=\"w100\" appearance=\"outline\">\n              <mat-label>Description</mat-label>\n\n              <textarea\n                name=\"description\"\n                matInput\n                placeholder=\"Enter Category Description\"\n                [(ngModel)]=\"category.description\"\n                rows=\"15\"\n              ></textarea>\n            </mat-form-field>\n\n            <div class=\"container text-center mt15\">\n              <button mat-raised-button color=\"accent\">Add</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport Swal from 'sweetalert2';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\n\n@Component({\n  selector: 'app-update-quiz',\n  templateUrl: './update-quiz.component.html',\n  styleUrls: ['./update-quiz.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    CKEditorModule,\n  ],\n})\nexport class UpdateQuizComponent implements OnInit {\n  constructor(\n    private _route: ActivatedRoute,\n    private _quiz: QuizService,\n    private _cat: CategoryService,\n    private _router: Router\n  ) {}\n\n  qId = 0;\n  quiz;\n  categories;\n\n  ngOnInit(): void {\n    this.qId = this._route.snapshot.params.qid;\n    // alert(this.qId);\n    this._quiz.getQuiz(this.qId).subscribe(\n      (data: any) => {\n        this.quiz = data;\n        console.log(this.quiz);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n\n    this._cat.categories().subscribe(\n      (data: any) => {\n        this.categories = data;\n      },\n      (error) => {\n        alert('error in loading categories');\n      }\n    );\n  }\n\n  //update form submit\n  public updateData() {\n    //validatate\n\n    this._quiz.updateQuiz(this.quiz).subscribe(\n      (data) => {\n        Swal.fire('Success !!', 'quiz updated', 'success').then((e) => {\n          this._router.navigate(['/admin/quizzes']);\n        });\n      },\n      (error) => {\n        Swal.fire('Error', 'error in updating quiz', 'error');\n        console.log(error);\n      }\n    );\n  }\n}\n","<mat-card>\n  <h1>Update Quiz Quiz</h1>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\">\n        <form *ngIf=\"quiz\" (submit)=\"updateData()\">\n          <!-- title field  -->\n          <mat-form-field class=\"w100\" appearance=\"fill\">\n            <mat-label>Enter Title</mat-label>\n            <input\n              [(ngModel)]=\"quiz.title\"\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Enter here\"\n              matInput\n              required\n            />\n          </mat-form-field>\n\n          <!-- description field  -->\n\n          <mat-form-field class=\"w100\" appearance=\"fill\">\n            <mat-label>Enter Description </mat-label>\n            <textarea\n              [(ngModel)]=\"quiz.description\"\n              type=\"text\"\n              name=\"description\"\n              placeholder=\"Enter here\"\n              matInput\n              rows=\"5\"\n            ></textarea>\n          </mat-form-field>\n\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <!-- //max marks -->\n              <mat-form-field class=\"w100\" appearance=\"fill\">\n                <mat-label>Maximum Marks</mat-label>\n                <input\n                  [(ngModel)]=\"quiz.maxMarks\"\n                  type=\"text\"\n                  name=\"maxMarks\"\n                  placeholder=\"Enter here\"\n                  matInput\n                />\n              </mat-form-field>\n            </div>\n            <div class=\"col-md-6\">\n              <!-- number of question to be shown  -->\n              <mat-form-field class=\"w100\" appearance=\"fill\">\n                <mat-label>Number of Question</mat-label>\n                <input\n                  [(ngModel)]=\"quiz.numberOfQuestions\"\n                  type=\"text\"\n                  name=\"numberOfQuestions\"\n                  placeholder=\"Enter here\"\n                  matInput\n                />\n              </mat-form-field>\n            </div>\n          </div>\n\n          <!-- active field   -->\n\n          <mat-slide-toggle\n            name=\"active\"\n            [(ngModel)]=\"quiz.active\"\n            class=\"mt20\"\n          >\n            Publish Status\n          </mat-slide-toggle>\n\n          <br />\n          <!-- //category select  -->\n          <mat-form-field appearance=\"fill\" class=\"mt20 w100\">\n            <mat-label>Categories</mat-label>\n            <mat-select name=\"category\" [(ngModel)]=\"quiz.category.cid\">\n              <mat-option *ngFor=\"let c of categories\" [value]=\"c.cid\">\n                {{ c.title }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <div class=\"container text-center\">\n            <button mat-raised-button color=\"accent\" type=\"submit\">\n              Update\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</mat-card>\n\n<!-- {{ quiz | json }} -->\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport Swal from 'sweetalert2';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'app-instructions',\n  templateUrl: './instructions.component.html',\n  styleUrls: ['./instructions.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatDividerModule,\n    MatButtonModule,\n  ],\n})\nexport class InstructionsComponent implements OnInit {\n  qid;\n  quiz;\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _quiz: QuizService,\n    private _router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.qid = this._route.snapshot.params.qid;\n    console.log('InstructionsComponent: Quiz ID from route (ngOnInit):', this.qid); // Log qid\n\n    this._quiz.getQuiz(this.qid).subscribe(\n      (data: any) => {\n        this.quiz = data;\n        console.log('InstructionsComponent: Quiz data loaded (ngOnInit):', this.quiz); // Log quiz data\n      },\n      (error) => {\n        console.log(error);\n        alert('Error in loading quiz data');\n      }\n    );\n  }\n\n  startQuiz() {\n    console.log('InstructionsComponent: === startQuiz() method entered ==='); // NEW LOG\n    console.log('InstructionsComponent: Navigating directly with qid:', this.qid); // NEW LOG\n\n    // Temporarily bypass SweetAlert2 to test direct navigation\n    this._router.navigate(['/start/' + this.qid]);\n\n    // Original SweetAlert2 code (now commented out)\n    // Swal.fire({\n    //   title: 'Do you want to start the quiz?',\n    //   showCancelButton: true,\n    //   confirmButtonText: `Start`,\n    //   denyButtonText: `Don't save`,\n    //   icon: 'info',\n    // }).then((result) => {\n    //   if (result.isConfirmed) {\n    //     console.log('InstructionsComponent: Confirming navigation to /start/' + this.qid);\n    //     this._router.navigate(['/start/' + this.qid]);\n    //   } else if (result.isDenied) {\n    //     Swal.fire('Changes are not saved', '', 'info');\n    //   }s\n    // });\n  }\n}\n","<div class=\"bootstrap-wrapper\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <mat-card class=\"mt20\">\n          <mat-card-header>\n            <!-- heading -->\n            <mat-card-title>\n              Read the instructions of this page carefully\n            </mat-card-title>\n            <mat-card-subtitle> One step more to go </mat-card-subtitle>\n          </mat-card-header>\n\n          <mat-card-content class=\"ml20\">\n            <!-- content  -->\n\n            <h1>{{ quiz.title }}</h1>\n            <p>{{ quiz.description }}</p>\n\n            <mat-divider></mat-divider>\n            <br />\n            <h1>Important Instructions</h1>\n\n            <ul>\n              <li>This quiz is only for practice purpose.</li>\n\n              <!-- Let the time of each questions is  2 minutes -->\n              <li>\n                You have to submit quiz with in\n                <b> {{ quiz.numberOfQuestions * 2 }} Minutes.</b>\n              </li>\n              <li>You can attempt the quiz any number of time .</li>\n              <li>\n                There are <b>{{ quiz.numberOfQuestions }} questions</b> in this\n                quiz.\n              </li>\n              <li>\n                Each questions carries\n                <b>{{ quiz.maxMarks / quiz.numberOfQuestions }} marks</b>. No\n                negative marking for wrong ones.\n              </li>\n              <li>All questions is of MCQ Types.</li>\n            </ul>\n\n            <mat-divider></mat-divider>\n            <br />\n            <h1>Attempting Quiz</h1>\n            <ul>\n              <li>Click <b>Start Quiz</b> button to start the quiz</li>\n              <li>\n                The time will start the moment you click the Start Test button.\n              </li>\n              <li>\n                You can not resume this quiz, if interrupted due to any reason.\n              </li>\n              <li>Scroll downl to move to next question.</li>\n              <li>Click on Submit Quiz button on completion of the quiz.</li>\n              <li>\n                Report of the test is automatically generated in the form of PDF\n                copy\n              </li>\n            </ul>\n          </mat-card-content>\n          <mat-card-actions class=\"text-center\">\n            <!-- actions -->\n            <button\n              (click)=\"startQuiz()\"\n              class=\"\"\n              mat-raised-button\n              color=\"primary\"\n            >\n              Start QUIZ\n            </button>\n          </mat-card-actions>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport Swal from 'sweetalert2';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-view-quizzes',\n  templateUrl: './view-quizzes.component.html',\n  styleUrls: ['./view-quizzes.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatCardModule,\n    MatListModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSnackBarModule\n  ],\n})\nexport class ViewQuizzesComponent implements OnInit {\n  quizzes = [];\n\n  constructor(private _quiz: QuizService) {}\n\n  ngOnInit(): void {\n    this._quiz.quizzes().subscribe(\n      (data: any) => {\n        this.quizzes = data;\n        console.log(this.quizzes);\n      },\n      (error) => {\n        console.log(error);\n        Swal.fire('Error !', 'Error in loading data !', 'error');\n      }\n    );\n  }\n\n  //\n  deleteQuiz(qId) {\n    Swal.fire({\n      icon: 'info',\n      title: 'Are you sure ?',\n      confirmButtonText: 'Delete',\n      showCancelButton: true,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        //delete...\n\n        this._quiz.deleteQuiz(qId).subscribe(\n          (data) => {\n            this.quizzes = this.quizzes.filter((quiz) => quiz.qId != qId);\n            Swal.fire('Success', 'Quiz deleted ', 'success');\n          },\n          (error) => {\n            Swal.fire('Error', 'Error in deleting quiz', 'error');\n          }\n        );\n      }\n    });\n  }\n}\n","<mat-card class=\"mt10 mr20 ml20\" *ngFor=\"let q of quizzes\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title>\n      {{ q.title }}\n    </mat-card-title>\n    <mat-card-subtitle>\n      {{ q.category.title }}\n    </mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <p>{{ q.description }}</p>\n  </mat-card-content>\n  <mat-card-action>\n    <button\n      [routerLink]=\"'/admin/view-questions/' + q.qId + '/' + q.title\"\n      mat-flat-button\n      color=\"accent\"\n    >\n      Questions\n    </button>\n    <button mat-stroked-button color=\"accent\" class=\"ml20\">\n      Max Marks: {{ q.maxMarks }}\n    </button>\n    <button mat-stroked-button color=\"accent\" class=\"ml20\">\n      Questions: {{ q.numberOfQuestions }}\n    </button>\n    <button\n      [routerLink]=\"'/admin/quiz/' + q.qId\"\n      mat-flat-button\n      color=\"accent\"\n      class=\"ml20\"\n    >\n      Update\n    </button>\n    <button mat-flat-button color=\"accent\" class=\"ml20\">Attempts</button>\n\n    <button\n      mat-flat-button\n      color=\"warn\"\n      class=\"ml10\"\n      (click)=\"deleteQuiz(q.qId)\"\n    >\n      Delete\n    </button>\n  </mat-card-action>\n</mat-card>\n\n<div class=\"container text-center mt20\">\n  <button routerLink=\"/admin/add-quiz\" mat-raised-button color=\"accent\">\n    Add New Quiz\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FlagsUiService } from 'src/app/flags-ui.service';\nimport { LoginService } from 'src/app/services/login.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatCardModule,\n    MatListModule,\n    MatIconModule,\n  ],\n})\nexport class SidebarComponent implements OnInit {\nshow:any=false\n  constructor(public login: LoginService,\n     public use:UserService,\n        private flagService: FlagsUiService,\n        private configService: ConfigService\n  ) { }\n  colour:any\nview:boolean=false\n  ngOnInit(): void {\nthis.show = this.configService.upload_img_enabled;\n    \n   const isFirstLoad = sessionStorage.getItem('colorFetched') !== 'true';\n    \n  if (isFirstLoad) {\n    // Fetch from API only on first load\n    this.use.getActiveColor().subscribe(\n      (data: any) => {\n        const parsed = typeof data === 'string' ? JSON.parse(data) : data;\n        this.colour = parsed.color;\n        console.log(\"Color fetched from API:\", this.colour);\n        // Save flag to avoid future API calls\n        sessionStorage.setItem('colorFetched', 'true');\n        // Emit color to shared service\n        this.flagService.setColor(parsed);\n      },\n      (error) => {\n        console.error(\"Error fetching color from API:\", error);\n        this.colour='pink'\n      }\n    );\n  }\n\n  // Always subscribe to observable for updates\n  this.flagService.getcolor.subscribe(\n    (data: any) => {\n             console.log(\"Color updated from observable:\", this.colour);\n      if (data && data.color) {\n        this.colour = data.color;\n        console.log(\"Color updated from observable:\", this.colour);\n      }\n    }\n  );\n  }\n\n  public logout() {\n    this.login.logout();\n    window.location.reload();\n    // this.login.loginStatusSubject.next(false);\n  }\n\n}\n","<mat-card class=\"mat-card\" [style.background-color]=\"colour\">\r\n  <mat-action-list   [style.background-color]=\"colour\">\r\n    <div mat-subheader>Menu</div>\r\n    <button routerLink=\"/admin\" mat-list-item>\r\n      <mat-icon mat-list-icon>home</mat-icon> Home\r\n    </button>\r\n    <button mat-list-item routerLink=\"/admin/profile\">\r\n      <mat-icon mat-list-icon>account_circle</mat-icon> Profile\r\n    </button>\r\n    <button mat-list-item routerLink=\"/admin/categories\">\r\n      <mat-icon mat-list-icon>list</mat-icon> Categories\r\n    </button>\r\n    <button mat-list-item routerLink=\"/admin/add-category\">\r\n      <mat-icon mat-list-icon>add_circle_outline</mat-icon> Add Categories\r\n    </button>\r\n    <button mat-list-item routerLink=\"/admin/quizzes\">\r\n      <mat-icon mat-list-icon>quiz</mat-icon> Quizzes\r\n    </button>\r\n    <button mat-list-item routerLink=\"/admin/add-quiz\">\r\n      <mat-icon mat-list-icon>add</mat-icon> Add Quiz\r\n    </button>\r\n    \r\n     @if (show) {\r\n      <button mat-list-item routerLink=\"/admin/image-upload\">\r\n        <mat-icon mat-list-icon>edit</mat-icon> Theme Setting\r\n      </button>\r\n    }\r\n    \r\n    <button mat-list-item  (click)=\"logout()\" routerLink=\"/home\">\r\n      <mat-icon mat-list-icon>logout</mat-icon> Logout\r\n    </button>\r\n    \r\n  </mat-action-list>\r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { FlagsUiService } from 'src/app/flags-ui.service';\nimport { RabbitmqService } from 'src/app/rabbitmq.service';\nimport { LoginService } from 'src/app/services/login.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { NotificationComponent } from '../../notification/notification.component';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    NotificationComponent, // Re-added NotificationComponent\n  ],\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n  @ViewChild(NotificationComponent) notificationComponent!: NotificationComponent;\n\n  isLoggedIn = false;\n  user = null;\nversion:any='';\n  constructor(public login: LoginService,\n    public use:UserService,\n    private websocketService: RabbitmqService,\n    private flagService: FlagsUiService,\n    private router: Router \n  \n  ) {}\n\n\n\ncolour:any='pink'\ncolor:any = 'red';\n\n  // message: string = '';\n  type: 'success' | 'error' | 'info' | 'warning' = 'info';\n  // Removed: visible: boolean = false; \n\n  private subscription!: Subscription;\n  // Removed: showNotification : boolean = false; \n// message = 'Operation successful';\n\n// type = 'success';\n  ngOnInit(): void {\n\n\n      this.flagService.initColorOnce(); \n    this.isLoggedIn = this.login.isLoggedIn();\n    this.user = this.login.getUser();\n    this.login.loginStatusSubject.asObservable().subscribe((data) => {\n      this.isLoggedIn = this.login.isLoggedIn();\n      this.user = this.login.getUser();\n    });\n \n \n\n\n\n    this.use.getVersion().subscribe((ver) => {\n      console.log(ver)\n      this.version = ver;\n    });\n\n   const isFirstLoad = sessionStorage.getItem('colorFetched') !== 'true';\n\n  if (isFirstLoad) {\n    // Fetch from API only on first load\n    this.use.getActiveColor().subscribe(\n      (data: any) => {\n        const parsed = typeof data === 'string' ? JSON.parse(data) : data;\n        this.colour = parsed.color;\n        console.log(\"Color fetched from API:\", this.colour);\n        // Save flag to avoid future API calls\n        sessionStorage.setItem('colorFetched', 'true');\n        // Emit color to shared service\n        this.flagService.setColor(parsed);\n      },\n      (error) => {\n        console.error(\"Error fetching color from API:\", error);\n        this.colour='pink'\n      }\n    );\n  }\n\n  // Always subscribe to observable for updates\n  this.flagService.getcolor.subscribe(\n    (data: any) => {\n             console.log(\"Color updated from observable:\", this.colour);\n      if (data && data.color) {\n        this.colour = data.color;\n        console.log(\"Color updated from observable:\", this.colour);\n      }\n    }\n  );\n\n\n\n\n// this.flagService.getcolor((data:any)=>{\n//       this.color=JSON.parse(data).color     \n//     })\n  \n\n     this.websocketService.connect();\n\n    this.subscription = this.websocketService.messageStream$.subscribe((msg) => {\n      // this.message = msg;\n      this.type = 'info'; // Or parse based on backend message\n      // Removed: this.visible = true;\n      if(msg){\n        // Removed: this.showNotification=true;\n        this.notificationComponent.showNotificationWithTimeout(msg, this.type); // Call method on NotificationComponent\n      }\n      // Removed: setTimeout(() => {\n      // Removed: }, 3000);\n    });\n\n\n\n    this.flagService.currentMessage$.subscribe(data => {\n      this.colour = data;\n    });\n  }\n\n\n  triggerNotification() {\n    // Removed: console.log('!!!!!!!!!!!'+ this.visible);\n\n    // Removed: this.message = 'Data saved successfully!';\n    this.type = 'success';\n    // Removed: this.showNotification= !this.showNotification;\n    // Removed: //  this.showNotification=!this.visible;\n    // Removed: setTimeout(() => {\n    // Removed: //  this.visible=!this.visible;\n    // Removed: //  console.log('Timeout!');\n    // Removed: }, 1000);\n    this.notificationComponent.toggleVisibility(); // Call toggle method on NotificationComponent\n  }\n\n\n  public logout() {\n    this.login.logout();\n    // window.location.reload();\n      this.router.navigate(['/home']); \n    this.login.loginStatusSubject.next(false);\n  }\n    ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.websocketService.disconnect();\n  }\n}\n","<!-- <h1>this is navbar</h1> -->\n<mat-toolbar  [style.background-color]=\"colour\">\n  <a\n    routerLink=\"/admin\"\n    mat-icon-button\n    class=\"example-icon\"\n    aria-label=\"Example icon-button with menu icon\"\n  >\n    <mat-icon>menu_book</mat-icon>\n  </a>\n  <span>Examportal  {{version}}</span>\n  <span class=\"example-spacer\"></span>\n  <a\n    *ngIf=\"!isLoggedIn\"\n    [routerLink]=\"'/login'\"\n    mat-button\n    class=\"\"\n    aria-label=\"Login button\"\n  >\n    Login\n  </a>\n\n  <a\n    *ngIf=\"!isLoggedIn\"\n    [routerLink]=\"'/signup'\"\n    mat-button\n    class=\" ml10\"\n    aria-label=\"Register button\"\n  >\n    Register\n  </a>\n<div>\n\n\n\n</div>\n@if (isLoggedIn) {\n  <a\n    (click)=\"logout()\"\n    mat-button\n    class=\"ml10\"\n    aria-label=\"Logout button\"\n  >\n    Logout\n  </a>\n}\n\n\n @if (isLoggedIn && user) {\n  <button\n    *ngIf=\"isLoggedIn && user\"\n    class=\"navbar-button ml10\"\n    mat-button\n    routerLink=\"/admin/profile\"\n    aria-label=\"User profile button\"\n  >\n    {{ user.username }}\n  </button>\n }\n\n\n<button  class=\" ml10\"\n    mat-button (click)=\"triggerNotification()\">Notification</button>\n</mat-toolbar>\n  <app-notification #notificationComponent\n \n  [type]=\"type\" \n></app-notification>\n"],"names":["SockJS","Client","Subject","RabbitmqService","constructor","configService","stompClient","messageSubject","messageStream$","asObservable","connect","socket","rabbitmq_url","webSocketFactory","reconnectDelay","onConnect","console","log","subscribe","message","body","next","activate","disconnect","deactivate","_","_staticBlock","i0","ɵɵinject","i1","ConfigService","factory","ɵfac","providedIn","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","RouterModule","MatButtonModule","MatInputModule","MatFormFieldModule","MatSnackBarModule","MatCardModule","MatToolbarModule","MatIconModule","MatListModule","MatSlideToggleModule","MatSelectModule","MatProgressSpinnerModule","MatDividerModule","CKEditorModule","NgxUiLoaderHttpModule","NgxUiLoaderModule","NavbarComponent","FooterComponent","AppComponent","websocketService","http","renderer","title","ngOnInit","loadBackgroundImage","get","image_url","responseType","blob","reader","FileReader","onload","imageUrl","result","setStyle","document","readAsDataURL","ɵɵdirectiveInject","i2","i3","HttpClient","Renderer2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵelementEnd","i4","RouterOutlet","i5","NgxUiLoaderComponent","NgxUiLoaderBlurredDirective","styles","SidebarComponent","UserSidebar","UserDashboardComponent","UserDashboardComponent_Template","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","q_r1","category","ɵɵtextInterpolate","description","ɵɵproperty","qId","numberOfQuestions","maxMarks","ɵɵtemplate","LoadQuizComponent_div_4_div_1_Template","LoadQuizComponent_div_4_div_2_Template","ctx_r1","quizzes","length","LoadQuizComponent","_route","_quiz","params","catId","getActiveQuizzes","data","error","alert","getActiveQuizzesOfCategory","ActivatedRoute","QuizService","LoadQuizComponent_Template","LoadQuizComponent_div_4_Template","NgForOf","NgIf","RouterLink","MatCard","MatCardAvatar","MatCardContent","MatCardHeader","MatCardSubtitle","MatCardTitle","MatButton","Swal","c_r1","cid","AddQuizComponent","_cat","_snack","categories","quizData","active","fire","addQuiz","trim","open","duration","CategoryService","MatSnackBar","AddQuizComponent_Template","ɵɵlistener","AddQuizComponent_Template_form_ngSubmit_6_listener","ɵɵtwoWayListener","AddQuizComponent_Template_input_ngModelChange_10_listener","$event","ɵɵtwoWayBindingSet","AddQuizComponent_Template_textarea_ngModelChange_14_listener","AddQuizComponent_Template_input_ngModelChange_20_listener","AddQuizComponent_Template_input_ngModelChange_25_listener","AddQuizComponent_Template_mat_slide_toggle_ngModelChange_26_listener","AddQuizComponent_Template_mat_select_ngModelChange_32_listener","AddQuizComponent_mat_option_33_Template","ɵɵtwoWayProperty","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","NgModel","NgForm","i6","i7","MatInput","MatFormField","MatLabel","i8","MatSelect","MatOption","i9","MatSlideToggle","i10","MatExpansionModule","ViewCategoriesComponent_mat_expansion_panel_4_Template_mat_expansion_panel_opened_0_listener","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵresetView","panelOpenState","ViewCategoriesComponent_mat_expansion_panel_4_Template_mat_expansion_panel_closed_0_listener","c_r3","ViewCategoriesComponent","_category","ViewCategoriesComponent_Template","ViewCategoriesComponent_mat_expansion_panel_4_Template","ViewCategoriesComponent_div_5_Template","MatAccordion","MatExpansionPanel","MatExpansionPanelHeader","MatExpansionPanelTitle","ctx_r0","imagePreview","ɵɵsanitizeUrl","ImageUploadComponent_div_15_img_9_Template_img_click_0_listener","img_r3","_r2","$implicit","setAsBackground","id","url","ImageUploadComponent_div_15_img_9_Template","uploadedImages","ImageUploadComponent_div_27_Template_div_click_0_listener","color_r5","_r4","selectColor","getColorStyle","color","ImageUploadComponent","flagService","userService","selectedFile","dataLoadingError","Colours","selectedColor","colour","imags","fetchUploadedImages","getBgColours","JSON","parse","isMaterialColor","includes","setColor","border","padding","textAlign","width","height","cursor","backgroundColor","getTextColor","darkColors","toLowerCase","addColor","obj","colourData","onFileChange","event","target","files","onSubmit","formData","FormData","append","String","post","images","map","image","err","setBackground","imageUrls","sendData","changeMessage","msg","FlagsUiService","UserService","ImageUploadComponent_Template","ImageUploadComponent_div_2_Template","ImageUploadComponent_Template_form_submit_6_listener","preventDefault","ImageUploadComponent_Template_input_ngModelChange_10_listener","ImageUploadComponent_Template_input_change_11_listener","ImageUploadComponent_div_12_Template","ImageUploadComponent_div_15_Template","ImageUploadComponent_Template_input_ngModelChange_23_listener","ImageUploadComponent_Template_button_click_24_listener","ImageUploadComponent_div_27_Template","ɵɵpureFunction2","_c0","ɵɵpureFunction0","_c1","NgStyle","addUser","user","api_url","getVersion","put","getActiveColor","AdminGuard","login","router","canActivate","route","state","isLoggedIn","getUserRole","navigate","LoginService","Router","ɵɵtextInterpolate2","firstName","lastName","username","phone","authorities","authority","enabled","ProfileComponent","getUser","ProfileComponent_Template","ProfileComponent_mat_card_0_Template","MatCardActions","NormalGuard","userRole","loginStatusSubject","getCurrentUser","generateToken","loginData","loginUser","token","localStorage","setItem","tokenStr","getItem","undefined","logout","removeItem","getToken","setUser","stringify","userStr","userRoles","role","roleId","ɵɵelementContainerStart","questions","quiz","StartComponent_div_0_div_24_Template_input_ngModelChange_9_listener","q_r4","_r3","givenAnswer","StartComponent_div_0_div_24_Template_input_ngModelChange_12_listener","StartComponent_div_0_div_24_Template_input_ngModelChange_16_listener","StartComponent_div_0_div_24_Template_input_ngModelChange_19_listener","i_r5","content","ɵɵsanitizeHtml","option1","option2","option3","option4","StartComponent_div_0_ng_container_9_Template","StartComponent_div_0_div_24_Template","StartComponent_div_0_Template_button_click_26_listener","submitQuiz","getFormattedTime","timer","marksGot","correctAnswers","attempted","StartComponent","locationSt","_question","isSubmit","preventBackButton","qid","snapshot","loadQuestions","getQuestionsOfQuizForTest","startTimer","warn","history","pushState","location","href","onPopState","showCancelButton","confirmButtonText","icon","then","e","isConfirmed","evalQuiz","t","window","setInterval","clearInterval","mm","Math","floor","ss","LocationStrategy","QuestionService","StartComponent_Template","StartComponent_div_0_Template","StartComponent_div_1_Template","RadioControlValueAccessor","MatDivider","MatProgressSpinner","WelcomeComponent","WelcomeComponent_Template","ɵɵdomElementStart","ɵɵdomElementEnd","loadConfig","timestamp","Date","getTime","toPromise","config","Error","upload_img_enabled","MatTableModule","ViewQuizQuestionsComponent_mat_card_8_Template_button_click_35_listener","q_r2","ctx_r2","deleteQuestion","quesId","i_r4","answer","ViewQuizQuestionsComponent","_snak","qTitle","getQuestionsOfQuiz","filter","q","ViewQuizQuestionsComponent_Template","ViewQuizQuestionsComponent_mat_card_8_Template","getcolor","SidebarComponent_Template","SidebarComponent_button_8_Template","ɵɵstyleProp","MatActionList","MatListItem","MatListSubheaderCssMatStyler","MatIcon","NotificationComponent_div_0_div_6_Template_form_ngSubmit_1_listener","sendMessage","NotificationComponent_div_0_div_6_Template_input_ngModelChange_2_listener","newMessage","msg_r4","NotificationComponent_div_0_Template_button_click_4_listener","hide","NotificationComponent_div_0_div_6_Template","NotificationComponent_div_0_p_8_Template","NotificationComponent_div_0_Template_a_click_9_listener","getHistory","type","checkUorA","visibleMessages","NotificationComponent","messages","visible","hflag","toastVisible","toastMessage","toastType","check","push","updateVisibleMessages","showToast","toggleVisibility","response","slice","toastTimeout","clearTimeout","setTimeout","showNotificationWithTimeout","inputs","NotificationComponent_Template","NotificationComponent_div_0_Template","NgClass","BehaviorSubject","messageSource","currentMessage$","bgColor","colorFetched","initColorOnce","fetchColorFromServer","parsed","_http","addCategory","enableProdMode","provideAppInitializer","inject","bootstrapApplication","environment","provideHttpClient","withInterceptorsFromDi","provideAnimations","authInterceptorProviders","provideRouter","withHashLocation","HomeComponent","LoginComponent","SignupComponent","DashboardComponent","AddCategoryComponent","ViewQuizzesComponent","UpdateQuizComponent","AddQuestionComponent","InstructionsComponent","production","routes","path","component","pathMatch","children","providers","catch","deleteQuiz","delete","getQuiz","updateQuiz","getQuizzesOfCategory","fullText","typedText","i","typingEffect","charAt","HomeComponent_Template","ɵɵdomElement","ɵɵdomProperty","DashboardComponent_Template","ClassicEditor","question","Editor","formSubmit","addQuestion","AddQuestionComponent_Template","AddQuestionComponent_Template_form_submit_12_listener","AddQuestionComponent_Template_textarea_ngModelChange_16_listener","AddQuestionComponent_Template_ckeditor_ngModelChange_17_listener","AddQuestionComponent_Template_input_ngModelChange_23_listener","AddQuestionComponent_Template_input_ngModelChange_28_listener","AddQuestionComponent_Template_input_ngModelChange_34_listener","AddQuestionComponent_Template_input_ngModelChange_39_listener","AddQuestionComponent_Template_mat_select_ngModelChange_43_listener","AddQuestionComponent_mat_option_44_Template","AddQuestionComponent_mat_option_45_Template","AddQuestionComponent_mat_option_46_Template","AddQuestionComponent_mat_option_47_Template","CKEditorComponent","FooterComponent_Template","HTTP_INTERCEPTORS","AuthInterceptor","intercept","req","authReq","clone","setHeaders","Authorization","handle","provide","useClass","multi","questionId","snack","password","email","text","SignupComponent_Template","SignupComponent_Template_form_ngSubmit_9_listener","SignupComponent_Template_input_ngModelChange_13_listener","SignupComponent_Template_input_ngModelChange_19_listener","SignupComponent_Template_input_ngModelChange_23_listener","SignupComponent_Template_input_ngModelChange_27_listener","SignupComponent_Template_input_ngModelChange_31_listener","SignupComponent_Template_input_ngModelChange_35_listener","NumberValueAccessor","MatHint","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_9_listener","LoginComponent_Template_input_ngModelChange_13_listener","LoginComponent_Template_input_ngModelChange_17_listener","AddCategoryComponent_Template","AddCategoryComponent_Template_form_ngSubmit_7_listener","AddCategoryComponent_Template_input_ngModelChange_11_listener","AddCategoryComponent_Template_textarea_ngModelChange_15_listener","UpdateQuizComponent_form_6_Template_form_submit_0_listener","updateData","UpdateQuizComponent_form_6_Template_input_ngModelChange_4_listener","UpdateQuizComponent_form_6_Template_textarea_ngModelChange_8_listener","UpdateQuizComponent_form_6_Template_input_ngModelChange_14_listener","UpdateQuizComponent_form_6_Template_input_ngModelChange_19_listener","UpdateQuizComponent_form_6_Template_mat_slide_toggle_ngModelChange_20_listener","UpdateQuizComponent_form_6_Template_mat_select_ngModelChange_26_listener","UpdateQuizComponent_form_6_mat_option_27_Template","_router","UpdateQuizComponent_Template","UpdateQuizComponent_form_6_Template","startQuiz","InstructionsComponent_Template","InstructionsComponent_Template_button_click_61_listener","ViewQuizzesComponent_mat_card_0_Template_button_click_21_listener","ViewQuizzesComponent_Template","ViewQuizzesComponent_mat_card_0_Template","use","show","view","isFirstLoad","sessionStorage","reload","ɵɵconditionalCreate","SidebarComponent_Conditional_28_Template","SidebarComponent_Template_button_click_29_listener","ɵɵconditional","NavbarComponent_Conditional_10_Template_a_click_0_listener","NavbarComponent_Conditional_11_button_0_Template","version","ver","subscription","notificationComponent","triggerNotification","ngOnDestroy","unsubscribe","viewQuery","NavbarComponent_Query","NavbarComponent_a_7_Template","NavbarComponent_a_8_Template","NavbarComponent_Conditional_10_Template","NavbarComponent_Conditional_11_Template","NavbarComponent_Template_button_click_12_listener","MatToolbar","MatIconButton"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}